{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\pages\\\\IndexLayout\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport classnames from 'classnames';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module.scss';\nimport AutoPlaySlider from '@/components/sliders/IndexSlider';\nconst GET_RECENT_POSTS = gql`\n  query getPostsByType($type: String, $quantity: Number) {\n    getPostsByType(type: $type, quantity: $quantity) {\n      title\n      description\n      content\n      image\n      created_at\n      slug\n      # cat_name\n      # cat_slug\n      # tags_names\n    }\n  }\n`;\n\nconst IndexLayout = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RECENT_POSTS, {\n    variables: {\n      type: 'slider',\n      quantity\n    }\n  });\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByType;\n  return __jsx(React.Fragment, null, __jsx(AutoPlaySlider, {\n    posts: fetchedPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default IndexLayout;","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/pages/IndexLayout/index.js"],"names":["classnames","gql","useQuery","styles","AutoPlaySlider","GET_RECENT_POSTS","IndexLayout","loading","error","data","variables","type","quantity","fetchedPosts","getPostsByType"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,MAAMC,gBAAgB,GAAGJ,GAAI;;;;;;;;;;;;;;CAA7B;;AAiBA,MAAMK,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACG,gBAAD,EAAmB;AAC1DK,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,QADG;AAETC,MAAAA;AAFS;AAD+C,GAAnB,CAAzC;AAMA,MAAIJ,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMM,YAAY,GAAGJ,IAAI,CAACK,cAA1B;AAEA,SAAO,4BACL,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAED,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAGD,CAfD;;AAiBA,eAAeP,WAAf","sourcesContent":["import classnames from 'classnames'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module.scss'\r\nimport AutoPlaySlider from '@/components/sliders/IndexSlider'\r\n\r\nconst GET_RECENT_POSTS = gql`\r\n  query getPostsByType($type: String, $quantity: Number) {\r\n    getPostsByType(type: $type, quantity: $quantity) {\r\n      title\r\n      description\r\n      content\r\n      image\r\n      created_at\r\n      slug\r\n      # cat_name\r\n      # cat_slug\r\n      # tags_names\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst IndexLayout = () => {  \r\n  const { loading, error, data } = useQuery(GET_RECENT_POSTS, {\r\n    variables: {\r\n      type: 'slider',\r\n      quantity\r\n    }\r\n  })\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  const fetchedPosts = data.getPostsByType\r\n\r\n  return <>\r\n    <AutoPlaySlider posts={fetchedPosts}/>\r\n  </>\r\n}\r\n\r\nexport default IndexLayout"]},"metadata":{},"sourceType":"module"}