{"ast":null,"code":"function datetimeSince(datetime) {\n  let objectDatetime = new Date(datetime);\n  var timeFormats = [[60, 'seconds', 1], [60 * 2, '1 minute ago', '1 minute from now'], [60 * 60, 'minutes', 60], [60 * 60 * 2, '1 hour ago', '1 hour from now'], [60 * 60 * 24, 'hours', 60 * 60], [60 * 60 * 24 * 2, 'Yesterday', 'Tomorrow'], [60 * 60 * 24 * 7, 'days', 60 * 60 * 24], [60 * 60 * 24 * 7 * 4 * 2, 'Last week', 'Next week'], [60 * 60 * 24 * 7 * 4, 'weeks', 604800], [60 * 60 * 24 * 7 * 4 * 2, 'Last month', 'Next month'], [60 * 60 * 24 * 7 * 4 * 12, 'months', 60 * 60 * 24 * 7 * 4], [60 * 60 * 24 * 7 * 4 * 12 * 2, 'Last year', 'Next year'], [60 * 60 * 24 * 7 * 4 * 12 * 100, 'years', 60 * 60 * 24 * 7 * 4 * 12]];\n  let seconds = (new Date() - objectDatetime) / 1000;\n  let token = seconds < 0 ? 'from now' : 'ago';\n  let listChoice = seconds < 0 ? 2 : 1;\n\n  if (seconds === 0) {\n    return 'Just now';\n  } else if (seconds < 0) {\n    seconds = Math.abs(seconds);\n  }\n\n  let format;\n\n  for (let i = 0; format = timeFormats[i]; i++) if (seconds < format[0]) return typeof format[2] == 'string' ? format[listChoice] : Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n\n  return objectDatetime;\n}\n\nexport default datetimeSince;","map":{"version":3,"sources":["D:/Site/showandnews/services/datetime-since/index.js"],"names":["datetimeSince","datetime","objectDatetime","Date","timeFormats","seconds","token","listChoice","Math","abs","format","i","floor"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,QAAvB,EAAiC;AAE/B,MAAIC,cAAc,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAArB;AAEA,MAAIG,WAAW,GAAG,CAChB,CAAC,EAAD,EAAK,SAAL,EAAgB,CAAhB,CADgB,EAEhB,CAAC,KAAG,CAAJ,EAAO,cAAP,EAAuB,mBAAvB,CAFgB,EAGhB,CAAC,KAAG,EAAJ,EAAQ,SAAR,EAAmB,EAAnB,CAHgB,EAIhB,CAAC,KAAG,EAAH,GAAM,CAAP,EAAU,YAAV,EAAwB,iBAAxB,CAJgB,EAKhB,CAAC,KAAG,EAAH,GAAM,EAAP,EAAW,OAAX,EAAoB,KAAG,EAAvB,CALgB,EAMhB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAV,EAAa,WAAb,EAA0B,UAA1B,CANgB,EAOhB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAV,EAAa,MAAb,EAAqB,KAAG,EAAH,GAAM,EAA3B,CAPgB,EAQhB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAX,GAAa,CAAd,EAAiB,WAAjB,EAA8B,WAA9B,CARgB,EAShB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAZ,EAAe,OAAf,EAAwB,MAAxB,CATgB,EAUhB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAX,GAAa,CAAd,EAAiB,YAAjB,EAA+B,YAA/B,CAVgB,EAWhB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAX,GAAa,EAAd,EAAkB,QAAlB,EAA4B,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAvC,CAXgB,EAYhB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAX,GAAa,EAAb,GAAgB,CAAjB,EAAoB,WAApB,EAAiC,WAAjC,CAZgB,EAahB,CAAC,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAX,GAAa,EAAb,GAAgB,GAAjB,EAAsB,OAAtB,EAA+B,KAAG,EAAH,GAAM,EAAN,GAAS,CAAT,GAAW,CAAX,GAAa,EAA5C,CAbgB,CAAlB;AAgBA,MAAIC,OAAO,GAAG,CAAC,IAAIF,IAAJ,KAAaD,cAAd,IAAgC,IAA9C;AACA,MAAII,KAAK,GAAGD,OAAO,GAAG,CAAV,GAAc,UAAd,GAA2B,KAAvC;AACA,MAAIE,UAAU,GAAGF,OAAO,GAAG,CAAV,GAAc,CAAd,GAAkB,CAAnC;;AAEA,MAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjB,WAAO,UAAP;AACD,GAFD,MAGK,IAAIA,OAAO,GAAG,CAAd,EAAiB;AACpBA,IAAAA,OAAO,GAAGG,IAAI,CAACC,GAAL,CAASJ,OAAT,CAAV;AACD;;AACD,MAAIK,MAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,MAAM,GAAGN,WAAW,CAACO,CAAD,CAApC,EAAyCA,CAAC,EAA1C,EACE,IAAIN,OAAO,GAAGK,MAAM,CAAC,CAAD,CAApB,EACE,OAAO,OAAOA,MAAM,CAAC,CAAD,CAAb,IAAoB,QAApB,GAA+BA,MAAM,CAACH,UAAD,CAArC,GAAoDC,IAAI,CAACI,KAAL,CAAWP,OAAO,GAAGK,MAAM,CAAC,CAAD,CAA3B,IAAkC,GAAlC,GAAwCA,MAAM,CAAC,CAAD,CAA9C,GAAoD,GAApD,GAA0DJ,KAArH;;AACJ,SAAOJ,cAAP;AACD;;AAGD,eAAeF,aAAf","sourcesContent":["function datetimeSince(datetime) {\r\n\r\n  let objectDatetime = new Date(datetime)\r\n\r\n  var timeFormats = [\r\n    [60, 'seconds', 1],\r\n    [60*2, '1 minute ago', '1 minute from now'],\r\n    [60*60, 'minutes', 60],\r\n    [60*60*2, '1 hour ago', '1 hour from now'],\r\n    [60*60*24, 'hours', 60*60],\r\n    [60*60*24*2, 'Yesterday', 'Tomorrow'],\r\n    [60*60*24*7, 'days', 60*60*24],\r\n    [60*60*24*7*4*2, 'Last week', 'Next week'],\r\n    [60*60*24*7*4, 'weeks', 604800],\r\n    [60*60*24*7*4*2, 'Last month', 'Next month'],\r\n    [60*60*24*7*4*12, 'months', 60*60*24*7*4],\r\n    [60*60*24*7*4*12*2, 'Last year', 'Next year'],\r\n    [60*60*24*7*4*12*100, 'years', 60*60*24*7*4*12]\r\n  ];\r\n\r\n  let seconds = (new Date() - objectDatetime) / 1000;\r\n  let token = seconds < 0 ? 'from now' : 'ago';\r\n  let listChoice = seconds < 0 ? 2 : 1;\r\n\r\n  if (seconds === 0) {\r\n    return 'Just now'\r\n  }\r\n  else if (seconds < 0) {\r\n    seconds = Math.abs(seconds);\r\n  }\r\n  let format;\r\n  for (let i = 0; format = timeFormats[i]; i++) \r\n    if (seconds < format[0])\r\n      return typeof format[2] == 'string' ? format[listChoice] : Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token\r\n  return objectDatetime;\r\n}\r\n\r\n\r\nexport default datetimeSince"]},"metadata":{},"sourceType":"module"}