{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\sliders\\\\IndexSlider\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Slider from \"react-slick\";\nimport styles from './styles.module.scss';\nimport classnames from 'classnames';\n\nvar SlideCard = function SlideCard(_ref) {\n  var post = _ref.post,\n      rest = _objectWithoutProperties(_ref, [\"post\"]);\n\n  var slug = post.slug,\n      title = post.title,\n      image = post.image;\n  var bgImage = {\n    backgroundImage: \"url(/images/\".concat(post.image, \")\")\n  };\n  return __jsx(\"div\", _extends({}, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: \"/post/\".concat(post.slug),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: classnames(styles.card, styles.overlay),\n    style: bgImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, post.title)))));\n};\n\n_c = SlideCard;\n\nvar AutoPlaySlider = function AutoPlaySlider(_ref2) {\n  var posts = _ref2.posts,\n      rest = _objectWithoutProperties(_ref2, [\"posts\"]);\n\n  var settings = {\n    infinite: true,\n    dots: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    cssEase: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n    speed: 4000,\n    // autoplay: true,\n    autoplaySpeed: 8000,\n    swipeToSlide: true,\n    pauseOnHover: true\n  };\n  return __jsx(\"div\", {\n    className: styles.sliderWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Slider, _extends({}, settings, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), posts.map(function (post, i) {\n    return __jsx(SlideCard, {\n      key: i,\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\n_c2 = AutoPlaySlider;\n\nvar SampleNextArrow = function SampleNextArrow(_ref3) {\n  var className = _ref3.className,\n      onClick = _ref3.onClick;\n  return __jsx(\"div\", {\n    className: classnames(className, styles.nextArrow),\n    onClick: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  });\n};\n\n_c3 = SampleNextArrow;\n\nvar SamplePrevArrow = function SamplePrevArrow(_ref4) {\n  var className = _ref4.className,\n      onClick = _ref4.onClick;\n  return __jsx(\"div\", {\n    className: classnames(className, styles.prevArrow),\n    onClick: onClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  });\n};\n\n_c4 = SamplePrevArrow;\nexport default AutoPlaySlider;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SlideCard\");\n$RefreshReg$(_c2, \"AutoPlaySlider\");\n$RefreshReg$(_c3, \"SampleNextArrow\");\n$RefreshReg$(_c4, \"SamplePrevArrow\");","map":{"version":3,"sources":["D:/Site/showandnews/components/sliders/IndexSlider/index.js"],"names":["Link","Slider","styles","classnames","SlideCard","post","rest","slug","title","image","bgImage","backgroundImage","card","overlay","content","AutoPlaySlider","posts","settings","infinite","dots","arrows","slidesToShow","slidesToScroll","cssEase","speed","autoplaySpeed","swipeToSlide","pauseOnHover","sliderWrapper","map","i","SampleNextArrow","className","onClick","nextArrow","SamplePrevArrow","prevArrow"],"mappings":"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","sourcesContent":["import Link from 'next/link'\r\nimport Slider from \"react-slick\";\r\n\r\nimport styles from './styles.module.scss'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst SlideCard = ({ post, ...rest }) => {\r\n  const { slug, title, image,  } = post\r\n  const bgImage = { backgroundImage: `url(/images/${post.image})` }\r\n\r\n  return (\r\n    <div {...rest}>\r\n      <Link href=\"/post/[slug]\" as={`/post/${post.slug}`}>\r\n        <a className={classnames(styles.card, styles.overlay)} style={bgImage}>\r\n          <div className={styles.content}>\r\n            <h2 className={styles.title}>{post.title}</h2>\r\n          </div>\r\n        </a>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst AutoPlaySlider = ({ posts, ...rest }) => {\r\n  const settings = {\r\n    infinite: true,\r\n    dots: true,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    cssEase: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\r\n    speed: 4000,\r\n    // autoplay: true,\r\n    autoplaySpeed: 8000,\r\n    swipeToSlide: true,\r\n    pauseOnHover: true,\r\n  }\r\n  return (\r\n    <div className={styles.sliderWrapper}>\r\n      <Slider {...settings}>\r\n        {posts.map((post, i) => (\r\n          <SlideCard key={i} post={post} />\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SampleNextArrow = ({ className, onClick }) =>\r\n  <div className={classnames(className, styles.nextArrow)} onClick={onClick} />\r\n\r\nconst SamplePrevArrow = ({ className, onClick }) =>\r\n  <div className={classnames(className, styles.prevArrow)} onClick={onClick} />\r\n\r\n\r\nexport default AutoPlaySlider"]},"metadata":{},"sourceType":"module"}