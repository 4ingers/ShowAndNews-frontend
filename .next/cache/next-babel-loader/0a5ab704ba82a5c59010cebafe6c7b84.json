{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\feed\\\\PostsGrid\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useMemo } from 'react';\nimport { Link } from 'next/link';\nimport { Pagination } from 'antd';\nimport styles from './styles.module.scss';\nimport useUpdateEffect from './hooks';\nimport TagRow from '@/components/feed/TagRow';\n\nconst PostsGrid = ({\n  posts\n}) => {\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(9);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(1);\n  const paginatedPosts = useMemo(() => {\n    const lastIndex = current * pageSize;\n    const firstIndex = lastIndex - pageSize;\n    return posts.slice(firstIndex, lastIndex);\n  }, [current, pageSize, posts]); // useUpdateEffect(() => {\n  //   window.scroll({\n  //     top: 0,\n  //     behavior: 'smooth'\n  //   })\n  // }, [current, pageSize])\n\n  return __jsx(\"section\", {\n    className: styles.gridPaginationContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: styles.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, paginatedPosts.map((post, index) => __jsx(\"div\", {\n    className: styles.postContainer,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: `/post/${post.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    src: `/images/${post.image}`,\n    alt: post.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 19\n    }\n  })))), __jsx(TagRow, {\n    tags: post.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, post.title), __jsx(\"p\", {\n    className: styles.authorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, post.created_at)), __jsx(\"p\", {\n    className: styles.descriptionText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, post.description), __jsx(Link, {\n    href: `post/${post.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\"))))), __jsx(Pagination, {\n    showSizeChanger: true,\n    onShowSizeChange: setPageSize,\n    pageSize: pageSize,\n    total: posts.length,\n    defaultCurrent: current,\n    onChange: setCurrent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default PostsGrid;","map":{"version":3,"sources":["D:/Site/showandnews/components/feed/PostsGrid/index.js"],"names":["useState","useMemo","Link","Pagination","styles","useUpdateEffect","TagRow","PostsGrid","posts","pageSize","setPageSize","current","setCurrent","paginatedPosts","lastIndex","firstIndex","slice","gridPaginationContainer","gridContainer","map","post","index","postContainer","slug","image","tags","title","authorText","created_at","descriptionText","description","length"],"mappings":"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","sourcesContent":["import { useState, useMemo } from 'react'\r\nimport { Link } from 'next/link'\r\nimport { Pagination } from 'antd'\r\n\r\nimport styles from './styles.module.scss'\r\nimport useUpdateEffect from './hooks'\r\nimport TagRow from '@/components/feed/TagRow'\r\n\r\n\r\nconst PostsGrid = ({ posts }) => {\r\n  const [pageSize, setPageSize] = useState(9)\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const paginatedPosts = useMemo(() => {\r\n    const lastIndex = current * pageSize\r\n    const firstIndex = lastIndex - pageSize\r\n\r\n    return posts.slice(firstIndex, lastIndex)\r\n  }, [current, pageSize, posts])\r\n\r\n  // useUpdateEffect(() => {\r\n  //   window.scroll({\r\n  //     top: 0,\r\n  //     behavior: 'smooth'\r\n  //   })\r\n  // }, [current, pageSize])\r\n\r\n  return (\r\n    <section className={styles.gridPaginationContainer}>\r\n      <section className={styles.gridContainer}>\r\n        {paginatedPosts.map((post, index) => (\r\n          <div className={styles.postContainer} key={index}>\r\n            <figure>\r\n              <Link href={`/post/${post.slug}`}>\r\n                <a>\r\n                  <img src={`/images/${post.image}`} alt={post.image} />\r\n                </a>\r\n              </Link>\r\n            </figure>\r\n\r\n            <TagRow tags={post.tags} />\r\n\r\n            <h2>\r\n              {post.title}\r\n            </h2>\r\n\r\n            <p className={styles.authorText}>\r\n              <span>\r\n                {post.created_at}\r\n              </span>\r\n            </p>\r\n\r\n            <p className={styles.descriptionText}>\r\n              {post.description}\r\n            </p>\r\n\r\n            <Link href={`post/${post.slug}`}>\r\n              <a>Подробнее</a>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <Pagination\r\n        showSizeChanger\r\n        onShowSizeChange={setPageSize}\r\n        pageSize={pageSize}\r\n        total={posts.length}\r\n        defaultCurrent={current}\r\n        onChange={setCurrent}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostsGrid"]},"metadata":{},"sourceType":"module"}