{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport withApollo from '../lib/apollo';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nconst QUERY = gql`\n{\n  getPostsByCategory(category_id: 1) {\n    id\n    image\n    title\n    created_at\n    category\n    description\n    author\n    tags\n    path\n  }\n}\n`;\n\nconst Index = props => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY);\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByCategory.map(post => ({\n    title: post.title,\n    datetime: post.created_at,\n    category: post.category,\n    tags: post.tags,\n    image: post.image,\n    path: post.path\n  }));\n  return __jsx(\"main\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(\"section\", {\n    className: \"featured-posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, __jsx(PostMasonry, {\n    posts: fetchedPosts,\n    columns: 2,\n    tagsOnTop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default withApollo({\n  ssr: true\n})(Index);","map":{"version":3,"sources":["D:/Site/showandnews/pages/index.js"],"names":["React","Head","Link","withApollo","gql","useQuery","QUERY","Index","props","loading","error","data","fetchedPosts","getPostsByCategory","map","post","title","datetime","created_at","category","tags","image","path","ssr"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,KAAK,GAAGF,GAAI;;;;;;;;;;;;;;CAAlB;;AAiBA,MAAMG,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,KAAD,CAAzC;AACA,MAAII,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMG,YAAY,GAAGD,IAAI,CAACE,kBAAL,CAAwBC,GAAxB,CAA4BC,IAAI,KACnD;AACEC,IAAAA,KAAK,EAAED,IAAI,CAACC,KADd;AAEEC,IAAAA,QAAQ,EAAEF,IAAI,CAACG,UAFjB;AAGEC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHjB;AAIEC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAJb;AAKEC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KALd;AAMEC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AANb,GADmD,CAAhC,CAArB;AAWA,SACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEV,YAApB;AAAkC,IAAA,OAAO,EAAE,CAA3C;AAA8C,IAAA,SAAS,EAAE,IAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF;AAWD,CA3BD;;AA6BA,eAAeT,UAAU,CAAC;AAAEoB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BhB,KAA1B,CAAf","sourcesContent":["import React from 'react'\r\nimport Head from 'next/head'\r\nimport Link from 'next/link'\r\nimport withApollo from '../lib/apollo'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst QUERY = gql`\r\n{\r\n  getPostsByCategory(category_id: 1) {\r\n    id\r\n    image\r\n    title\r\n    created_at\r\n    category\r\n    description\r\n    author\r\n    tags\r\n    path\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst Index = props => {\r\n  const { loading, error, data } = useQuery(QUERY);\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>;\r\n\r\n  const fetchedPosts = data.getPostsByCategory.map(post => (\r\n    {\r\n      title: post.title,\r\n      datetime: post.created_at,\r\n      category: post.category,\r\n      tags: post.tags,\r\n      image: post.image,\r\n      path: post.path\r\n    }\r\n  ))\r\n\r\n  return (\r\n    <main className=\"home\">\r\n      <section className=\"container\">\r\n        <div className=\"row\">\r\n          <section className=\"featured-posts-container\">\r\n            <PostMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default withApollo({ ssr: true })(Index)"]},"metadata":{},"sourceType":"module"}