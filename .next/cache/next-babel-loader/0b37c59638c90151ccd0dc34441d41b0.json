{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\feed\\\\PostsMasonry\\\\MasonryPost\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport TagRow from './TagRow';\n\nvar MasonryPost = function MasonryPost(_ref) {\n  _s();\n\n  var post = _ref.post,\n      tagsOnTop = _ref.tagsOnTop;\n\n  var _useState = useState(0),\n      windowWidth = _useState[0],\n      setWindowWidth = _useState[1];\n\n  useEffect(function () {\n    setWindowWidth(window.innerWidth);\n  });\n  var imageBackground = {\n    backgroundImage: \"url(/images/\".concat(post.image, \")\")\n  };\n  var style = windowWidth > 900 ? _objectSpread(_objectSpread({}, imageBackground), post.style) : imageBackground; // const style = { ...post.style }\n\n  console.log();\n  return __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: \"/post/\".concat(post.slug),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    className: styles.masonryPostOverlay,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.imageText,\n    style: {\n      justifyContent: tagsOnTop ? 'space-between' : 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(TagRow, {\n    tags: post.tags,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: styles.imageTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, post.title), __jsx(\"span\", {\n    className: styles.imageDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, new Date(post.datetime).toUTCString())))));\n};\n\n_s(MasonryPost, \"pbbkZhtjlGc4tSJD9AQY+caR7fc=\");\n\n_c = MasonryPost;\nexport default MasonryPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasonryPost\");","map":{"version":3,"sources":["D:/Site/showandnews/components/feed/PostsMasonry/MasonryPost/index.js"],"names":["Link","useState","useEffect","styles","TagRow","MasonryPost","post","tagsOnTop","windowWidth","setWindowWidth","window","innerWidth","imageBackground","backgroundImage","image","style","console","log","slug","masonryPostOverlay","imageText","justifyContent","tags","imageTitle","title","imageDate","Date","datetime","toUTCString"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAyB;AAAA;;AAAA,MAAtBC,IAAsB,QAAtBA,IAAsB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBAELN,QAAQ,CAAC,CAAD,CAFH;AAAA,MAEpCO,WAFoC;AAAA,MAEvBC,cAFuB;;AAG3CP,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,cAAc,CAACC,MAAM,CAACC,UAAR,CAAd;AACD,GAFQ,CAAT;AAIA,MAAMC,eAAe,GAAG;AAAEC,IAAAA,eAAe,wBAAiBP,IAAI,CAACQ,KAAtB;AAAjB,GAAxB;AACA,MAAMC,KAAK,GAAGP,WAAW,GAAG,GAAd,mCAAyBI,eAAzB,GAA6CN,IAAI,CAACS,KAAlD,IAA4DH,eAA1E,CAR2C,CAS3C;;AAEAI,EAAAA,OAAO,CAACC,GAAR;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,kBAAWX,IAAI,CAACY,IAAhB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEf,MAAM,CAACgB,kBAArB;AAAyC,IAAA,KAAK,EAAEJ,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACiB,SAAvB;AAAkC,IAAA,KAAK,EAAE;AAAEC,MAAAA,cAAc,EAAEd,SAAS,GAAG,eAAH,GAAqB;AAAhD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAED,IAAI,CAACgB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEnB,MAAM,CAACoB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCjB,IAAI,CAACkB,KAAxC,CADF,EAEE;AAAM,IAAA,SAAS,EAAErB,MAAM,CAACsB,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIC,IAAJ,CAASpB,IAAI,CAACqB,QAAd,EAAwBC,WAAxB,EADH,CAFF,CAFF,CADF,CADF,CADF;AAeD,CA5BD;;GAAMvB,W;;KAAAA,W;AA8BN,eAAeA,WAAf","sourcesContent":["import Link from 'next/link'\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport styles from './styles.module.scss'\r\nimport TagRow from './TagRow'\r\n\r\nconst MasonryPost = ({ post, tagsOnTop }) => {\r\n\r\n  const [windowWidth, setWindowWidth] = useState(0);\r\n  useEffect(() => {\r\n    setWindowWidth(window.innerWidth);\r\n  });\r\n\r\n  const imageBackground = { backgroundImage: `url(/images/${post.image})` };\r\n  const style = windowWidth > 900 ? { ...imageBackground, ...post.style } : imageBackground\r\n  // const style = { ...post.style }\r\n\r\n  console.log();\r\n\r\n  return (\r\n    <Link href=\"/post/[slug]\" as={`/post/${post.slug}`}>\r\n      <a className={styles.masonryPostOverlay} style={style}>\r\n        <div className={styles.imageText} style={{ justifyContent: tagsOnTop ? 'space-between' : 'flex-end' }}>\r\n          <TagRow tags={post.tags} />\r\n          <div>\r\n            <h2 className={styles.imageTitle}>{post.title}</h2>\r\n            <span className={styles.imageDate}>\r\n              {new Date(post.datetime).toUTCString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </a>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default MasonryPost"]},"metadata":{},"sourceType":"module"}