{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\pages\\\\IndexLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPostsByType($type: String, $limit: Int) {\\n    getPostsByType(type: $type, limit: $limit) {\\n      title\\n      description\\n      content\\n      image\\n      createdAt\\n      slug\\n      category\\n      # tagsName\\n      # tagsName\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport classnames from 'classnames';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module.scss';\nimport AutoPlaySlider from '@/components/sliders/IndexSlider';\nvar GET_RECENT_POSTS = gql(_templateObject());\n\nvar IndexLayout = function IndexLayout() {\n  _s();\n\n  var _useQuery = useQuery(GET_RECENT_POSTS, {\n    variables: {\n      type: 'slider',\n      limit: 3\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  var fetchedPosts = data.getPostsByType;\n  return __jsx(React.Fragment, null, __jsx(AutoPlaySlider, {\n    posts: fetchedPosts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }));\n};\n\n_s(IndexLayout, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = IndexLayout;\nexport default IndexLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexLayout\");","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/pages/IndexLayout/index.js"],"names":["classnames","gql","useQuery","styles","AutoPlaySlider","GET_RECENT_POSTS","IndexLayout","variables","type","limit","loading","error","data","fetchedPosts","getPostsByType"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,IAAMC,gBAAgB,GAAGJ,GAAH,mBAAtB;;AAiBA,IAAMK,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACSJ,QAAQ,CAACG,gBAAD,EAAmB;AAC1DE,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE,QADG;AAETC,MAAAA,KAAK,EAAE;AAFE;AAD+C,GAAnB,CADjB;AAAA,MAChBC,OADgB,aAChBA,OADgB;AAAA,MACPC,KADO,aACPA,KADO;AAAA,MACAC,IADA,aACAA,IADA;;AAOxB,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,MAAMG,YAAY,GAAGD,IAAI,CAACE,cAA1B;AAEA,SAAO,4BACL,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAED,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,CAAP;AAGD,CAfD;;GAAMP,W;UAC6BJ,Q;;;KAD7BI,W;AAiBN,eAAeA,WAAf","sourcesContent":["import classnames from 'classnames'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module.scss'\r\nimport AutoPlaySlider from '@/components/sliders/IndexSlider'\r\n\r\nconst GET_RECENT_POSTS = gql`\r\n  query getPostsByType($type: String, $limit: Int) {\r\n    getPostsByType(type: $type, limit: $limit) {\r\n      title\r\n      description\r\n      content\r\n      image\r\n      createdAt\r\n      slug\r\n      category\r\n      # tagsName\r\n      # tagsName\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst IndexLayout = () => {  \r\n  const { loading, error, data } = useQuery(GET_RECENT_POSTS, {\r\n    variables: {\r\n      type: 'slider',\r\n      limit: 3\r\n    }\r\n  })\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  const fetchedPosts = data.getPostsByType\r\n\r\n  return <>\r\n    <AutoPlaySlider posts={fetchedPosts}/>\r\n  </>\r\n}\r\n\r\nexport default IndexLayout"]},"metadata":{},"sourceType":"module"}