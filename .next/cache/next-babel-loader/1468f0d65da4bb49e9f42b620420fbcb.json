{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\body\\\\CategoryPage.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport withApollo from '../../lib/apollo';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nconst QUERY = gql`\n  {\n    getPostsByCategory(category_id: $id) {\n      id\n      image\n      title\n      created_at\n      category\n      description\n      author\n      tags\n      path\n    }\n  }\n`;\n\nconst CategoryPage = ({\n  category_id\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY, {\n    variables: {\n      category_id: category_id\n    }\n  });\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByCategory.map(post => ({\n    title: post.title,\n    datetime: post.created_at,\n    category: post.category,\n    tags: post.tags,\n    image: post.image,\n    path: post.path\n  }));\n  return (// <main className=\"home\">\n    //   <section className=\"container\">\n    //     <div className=\"row\">\n    //       <section className=\"featured-posts-container\">\n    //         <PostMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} />\n    //       </section>\n    //     </div>\n    //   </section>\n    // </main>\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, fetchedPosts.map(post => __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, post.title)))\n  );\n};\n\nexport default withApollo({\n  ssr: true\n})(CategoryPage);","map":{"version":3,"sources":["D:/Site/showandnews/components/body/CategoryPage.js"],"names":["React","Link","withApollo","gql","useQuery","QUERY","CategoryPage","category_id","loading","error","data","variables","fetchedPosts","getPostsByCategory","map","post","title","datetime","created_at","category","tags","image","path","ssr"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,KAAK,GAAGF,GAAI;;;;;;;;;;;;;;CAAlB;;AAgBA,MAAMG,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AACtC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,KAAD,EAAQ;AAC/CM,IAAAA,SAAS,EAAE;AACTJ,MAAAA,WAAW,EAAEA;AADJ;AADoC,GAAR,CAAzC;AAKA,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMI,YAAY,GAAGF,IAAI,CAACG,kBAAL,CAAwBC,GAAxB,CAA4BC,IAAI,KACnD;AACEC,IAAAA,KAAK,EAAED,IAAI,CAACC,KADd;AAEEC,IAAAA,QAAQ,EAAEF,IAAI,CAACG,UAFjB;AAGEC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHjB;AAIEC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAJb;AAKEC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KALd;AAMEC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AANb,GADmD,CAAhC,CAArB;AAWA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,YAAY,CAACE,GAAb,CAAiBC,IAAI,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAI,CAACC,KAAV,CADD,CADH;AAVF;AAgBD,CApCD;;AAsCA,eAAed,UAAU,CAAC;AAAEqB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA0BjB,YAA1B,CAAf","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport withApollo from '../../lib/apollo'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nconst QUERY = gql`\r\n  {\r\n    getPostsByCategory(category_id: $id) {\r\n      id\r\n      image\r\n      title\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      path\r\n    }\r\n  }\r\n`\r\n\r\nconst CategoryPage = ({category_id}) => {\r\n  const { loading, error, data } = useQuery(QUERY, {\r\n    variables: {\r\n      category_id: category_id\r\n    }\r\n  });\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>;\r\n\r\n  const fetchedPosts = data.getPostsByCategory.map(post => (\r\n    {\r\n      title: post.title,\r\n      datetime: post.created_at,\r\n      category: post.category,\r\n      tags: post.tags,\r\n      image: post.image,\r\n      path: post.path\r\n    }\r\n  ))\r\n\r\n  return (\r\n    // <main className=\"home\">\r\n    //   <section className=\"container\">\r\n    //     <div className=\"row\">\r\n    //       <section className=\"featured-posts-container\">\r\n    //         <PostMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} />\r\n    //       </section>\r\n    //     </div>\r\n    //   </section>\r\n    // </main>\r\n    <div>\r\n      {fetchedPosts.map(post => \r\n        <h2>{post.title}</h2>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withApollo({ ssr: true })(CategoryPage)"]},"metadata":{},"sourceType":"module"}