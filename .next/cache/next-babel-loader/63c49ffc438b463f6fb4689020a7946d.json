{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from 'next-with-apollo';\nimport Head from 'next/head';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { ConfigProvider } from 'antd';\nimport ruRU from 'antd/es/locale/ru_RU'; //* Styles\n\nimport '@/styles/base.scss';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport 'antd/dist/antd.css';\n\nconst NewsApp = ({\n  Component,\n  pageProps,\n  apollo\n}) => __jsx(ApolloProvider, {\n  client: apollo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, __jsx(Head, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }\n}, __jsx(\"meta\", {\n  name: \"viewport\",\n  content: \"width=device-width, initial-scale=1, user-scalable=0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }\n})), __jsx(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }\n})));\n\nexport default withApollo(({\n  initialState\n}) => {\n  return new ApolloClient({\n    uri: 'http://localhost:4000/graphql',\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(NewsApp);","map":{"version":3,"sources":["D:/Site/showandnews/pages/_app.js"],"names":["withApollo","Head","ApolloProvider","ApolloClient","InMemoryCache","ConfigProvider","ruRU","NewsApp","Component","pageProps","apollo","initialState","uri","cache","restore"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB,C,CAEA;;AACA,OAAO,oBAAP;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,oBAAP;;AAGA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KACd,MAAC,cAAD;AAAgB,EAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAM,EAAA,IAAI,EAAC,UAAX;AAAsB,EAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,EAKI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GALJ,CADF;;AAWA,eAAeT,UAAU,CAAC,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAsB;AAC9C,SAAO,IAAIR,YAAJ,CAAiB;AACtBS,IAAAA,GAAG,EAAE,+BADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIT,aAAJ,GAAoBU,OAApB,CAA4BH,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CALwB,CAAV,CAKZJ,OALY,CAAf","sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport Head from 'next/head';\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\r\nimport { ConfigProvider } from 'antd';\r\nimport ruRU from 'antd/es/locale/ru_RU';\r\n\r\n//* Styles\r\nimport '@/styles/base.scss';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nconst NewsApp = ({ Component, pageProps, apollo }) => (\r\n  <ApolloProvider client={apollo}>\r\n    {/* <ConfigProvider locale={ruRU}> */}\r\n      <Head>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=0\" />\r\n      </Head>\r\n      <Component {...pageProps} />\r\n    {/* </ConfigProvider> */}\r\n  </ApolloProvider>\r\n);\r\n\r\nexport default withApollo(({ initialState }) => {\r\n  return new ApolloClient({\r\n    uri: 'http://localhost:4000/graphql',\r\n    cache: new InMemoryCache().restore(initialState || {})\r\n  });\r\n})(NewsApp);"]},"metadata":{},"sourceType":"module"}