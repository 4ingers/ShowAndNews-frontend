{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\TagLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPostsByTag($tagSlug: String) {\\n    getPostsByTag(tagSlug: $tagSlug) {\\n      id\\n      image\\n      title\\n      content\\n      created_at\\n      category\\n      description\\n      author\\n      tags\\n      slug\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport classnames from 'classnames';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module.scss'; // import PostsMasonry from '@/components/feed/PostsMasonry'\n\nvar GET_POSTS = gql(_templateObject());\n\nvar TagLayout = function TagLayout(_ref) {\n  _s();\n\n  var slug = _ref.slug;\n\n  var _useQuery = useQuery(GET_POSTS, {\n    variables: {\n      tagSlug: slug\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  var fetchedPosts = data.getPostsByTag.map(function (post) {\n    return {\n      id: post.title,\n      title: post.title,\n      description: post.description,\n      content: post.content,\n      datetime: post.created_at,\n      category: post.category,\n      tags: post.tags,\n      image: post.image,\n      slug: post.slug\n    };\n  });\n  return __jsx(\"pre\", {\n    className: classnames(styles.content),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, JSON.stringify(fetchedPosts, null, 2));\n};\n\n_s(TagLayout, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = TagLayout;\nexport default TagLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagLayout\");","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/TagLayout/index.js"],"names":["classnames","gql","useQuery","styles","GET_POSTS","TagLayout","slug","variables","tagSlug","loading","error","data","fetchedPosts","getPostsByTag","map","post","id","title","description","content","datetime","created_at","category","tags","image","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAGA,IAAMC,SAAS,GAAGH,GAAH,mBAAf;;AAkBA,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAEGJ,QAAQ,CAACE,SAAD,EAAY;AACnDG,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAEF;AADA;AADwC,GAAZ,CAFX;AAAA,MAEtBG,OAFsB,aAEtBA,OAFsB;AAAA,MAEbC,KAFa,aAEbA,KAFa;AAAA,MAENC,IAFM,aAENA,IAFM;;AAO9B,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,MAAMG,YAAY,GAAGD,IAAI,CAACE,aAAL,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,WAAK;AACnDC,MAAAA,EAAE,EAAED,IAAI,CAACE,KAD0C;AAEnDA,MAAAA,KAAK,EAAEF,IAAI,CAACE,KAFuC;AAGnDC,MAAAA,WAAW,EAAEH,IAAI,CAACG,WAHiC;AAInDC,MAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJqC;AAKnDC,MAAAA,QAAQ,EAAEL,IAAI,CAACM,UALoC;AAMnDC,MAAAA,QAAQ,EAAEP,IAAI,CAACO,QANoC;AAOnDC,MAAAA,IAAI,EAAER,IAAI,CAACQ,IAPwC;AAQnDC,MAAAA,KAAK,EAAET,IAAI,CAACS,KARuC;AASnDlB,MAAAA,IAAI,EAAES,IAAI,CAACT;AATwC,KAAL;AAAA,GAA3B,CAArB;AAYA,SACE;AAAK,IAAA,SAAS,EAAEN,UAAU,CAACG,MAAM,CAACgB,OAAR,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,IAAI,CAACC,SAAL,CAAed,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CADH,CADF;AAKD,CA3BD;;GAAMP,S;UAE6BH,Q;;;KAF7BG,S;AA6BN,eAAeA,SAAf","sourcesContent":["import classnames from 'classnames'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module.scss'\r\n// import PostsMasonry from '@/components/feed/PostsMasonry'\r\n\r\n\r\nconst GET_POSTS = gql`\r\n  query getPostsByTag($tagSlug: String) {\r\n    getPostsByTag(tagSlug: $tagSlug) {\r\n      id\r\n      image\r\n      title\r\n      content\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst TagLayout = ({ slug }) => {\r\n\r\n  const { loading, error, data } = useQuery(GET_POSTS, {\r\n    variables: {\r\n      tagSlug: slug\r\n    }\r\n  });\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  const fetchedPosts = data.getPostsByTag.map(post => ({\r\n    id: post.title,\r\n    title: post.title,\r\n    description: post.description,\r\n    content: post.content,\r\n    datetime: post.created_at,\r\n    category: post.category,\r\n    tags: post.tags,\r\n    image: post.image,\r\n    slug: post.slug\r\n  }))\r\n\r\n  return (\r\n    <pre className={classnames(styles.content)}>\r\n      {JSON.stringify(fetchedPosts, null, 2)}\r\n    </pre>\r\n  )\r\n}\r\n\r\nexport default TagLayout"]},"metadata":{},"sourceType":"module"}