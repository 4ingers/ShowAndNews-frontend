{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\sliders\\\\IndexSlider\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Link from 'next/link';\nimport Slider from \"react-slick\";\nimport styles from './styles.module.scss';\nimport classnames from 'classnames';\n\nconst SlideCard = (_ref) => {\n  let {\n    post\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"post\"]);\n\n  const bgImage = {\n    backgroundImage: `url(/images/${post.image})`\n  };\n  return __jsx(\"div\", _extends({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }), __jsx(Link, {\n    href: \"/post/[slug]\",\n    as: `/post/${post.slug}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: classnames(styles.card, styles.overlay),\n    style: bgImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, post.title)))));\n};\n\nconst AutoPlaySlider = (_ref2) => {\n  let {\n    posts\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"posts\"]);\n\n  const settings = {\n    infinite: true,\n    dots: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    cssEase: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\n    speed: 4000,\n    // autoplay: true,\n    autoplaySpeed: 8000,\n    swipeToSlide: true,\n    pauseOnHover: true\n  };\n  return __jsx(\"div\", {\n    className: styles.sliderWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Slider, _extends({}, settings, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), posts.map((post, i) => __jsx(SlideCard, {\n    key: i,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst SampleNextArrow = ({\n  className,\n  onClick\n}) => __jsx(\"div\", {\n  className: classnames(className, styles.nextArrow),\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }\n});\n\nconst SamplePrevArrow = ({\n  className,\n  onClick\n}) => __jsx(\"div\", {\n  className: classnames(className, styles.prevArrow),\n  onClick: onClick,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }\n});\n\nexport default AutoPlaySlider;","map":{"version":3,"sources":["D:/Site/showandnews/components/sliders/IndexSlider/index.js"],"names":["Link","Slider","styles","classnames","SlideCard","post","rest","bgImage","backgroundImage","image","slug","card","overlay","content","title","AutoPlaySlider","posts","settings","infinite","dots","arrows","slidesToShow","slidesToScroll","cssEase","speed","autoplaySpeed","swipeToSlide","pauseOnHover","sliderWrapper","map","i","SampleNextArrow","className","onClick","nextArrow","SamplePrevArrow","prevArrow"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAGA,MAAMC,SAAS,GAAG,UAAuB;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AAAA,MAAXC,IAAW;;AAGvC,QAAMC,OAAO,GAAG;AAAEC,IAAAA,eAAe,EAAG,eAAcH,IAAI,CAACI,KAAM;AAA7C,GAAhB;AAEA,SACE,0BAASH,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,cAAX;AAA0B,IAAA,EAAE,EAAG,SAAQD,IAAI,CAACK,IAAK,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAEP,UAAU,CAACD,MAAM,CAACS,IAAR,EAAcT,MAAM,CAACU,OAArB,CAAxB;AAAuD,IAAA,KAAK,EAAEL,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACW,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEX,MAAM,CAACY,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BT,IAAI,CAACS,KAAnC,CADF,CADF,CADF,CADF,CADF;AAWD,CAhBD;;AAmBA,MAAMC,cAAc,GAAG,WAAwB;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AAAA,MAAXV,IAAW;;AAC7C,QAAMW,QAAQ,GAAG;AACfC,IAAAA,QAAQ,EAAE,IADK;AAEfC,IAAAA,IAAI,EAAE,IAFS;AAGfC,IAAAA,MAAM,EAAE,KAHO;AAIfC,IAAAA,YAAY,EAAE,CAJC;AAKfC,IAAAA,cAAc,EAAE,CALD;AAMfC,IAAAA,OAAO,EAAE,sCANM;AAOfC,IAAAA,KAAK,EAAE,IAPQ;AAQf;AACAC,IAAAA,aAAa,EAAE,IATA;AAUfC,IAAAA,YAAY,EAAE,IAVC;AAWfC,IAAAA,YAAY,EAAE;AAXC,GAAjB;AAaA,SACE;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,eAAYX,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGD,KAAK,CAACa,GAAN,CAAU,CAACxB,IAAD,EAAOyB,CAAP,KACT,MAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAhB;AAAmB,IAAA,IAAI,EAAEzB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AASD,CAvBD;;AAyBA,MAAM0B,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACtB;AAAK,EAAA,SAAS,EAAE9B,UAAU,CAAC6B,SAAD,EAAY9B,MAAM,CAACgC,SAAnB,CAA1B;AAAyD,EAAA,OAAO,EAAED,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAGA,MAAME,eAAe,GAAG,CAAC;AAAEH,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KACtB;AAAK,EAAA,SAAS,EAAE9B,UAAU,CAAC6B,SAAD,EAAY9B,MAAM,CAACkC,SAAnB,CAA1B;AAAyD,EAAA,OAAO,EAAEH,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAIA,eAAelB,cAAf","sourcesContent":["import Link from 'next/link'\r\nimport Slider from \"react-slick\";\r\n\r\nimport styles from './styles.module.scss'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst SlideCard = ({ post, ...rest }) => {\r\n  \r\n\r\n  const bgImage = { backgroundImage: `url(/images/${post.image})` }\r\n  \r\n  return (\r\n    <div {...rest}>\r\n      <Link href=\"/post/[slug]\" as={`/post/${post.slug}`}>\r\n        <a className={classnames(styles.card, styles.overlay)} style={bgImage}>\r\n          <div className={styles.content}>\r\n            <h2 className={styles.title}>{post.title}</h2>\r\n          </div>\r\n        </a>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst AutoPlaySlider = ({ posts, ...rest }) => {\r\n  const settings = {\r\n    infinite: true,\r\n    dots: true,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    cssEase: 'cubic-bezier(0.645, 0.045, 0.355, 1)',\r\n    speed: 4000,\r\n    // autoplay: true,\r\n    autoplaySpeed: 8000,\r\n    swipeToSlide: true,\r\n    pauseOnHover: true,\r\n  }\r\n  return (\r\n    <div className={styles.sliderWrapper}>\r\n      <Slider {...settings}>\r\n        {posts.map((post, i) => (\r\n          <SlideCard key={i} post={post} />\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SampleNextArrow = ({ className, onClick }) =>\r\n  <div className={classnames(className, styles.nextArrow)} onClick={onClick} />\r\n\r\nconst SamplePrevArrow = ({ className, onClick }) =>\r\n  <div className={classnames(className, styles.prevArrow)} onClick={onClick} />\r\n\r\n\r\nexport default AutoPlaySlider"]},"metadata":{},"sourceType":"module"}