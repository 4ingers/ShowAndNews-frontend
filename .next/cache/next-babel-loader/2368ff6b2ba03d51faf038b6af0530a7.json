{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\Category\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withApollo from '@/lib/withApollo';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport PostsMasonry from '@/components/feed/PostsMasonry';\nconst QUERY = gql`\n  query postsByCategory($categorySlug: String){\n    getPostsByCategory(categorySlug: $categorySlug) {\n      id\n      image\n      title\n      created_at\n      category\n      description\n      author\n      tags\n      slug\n    }\n  }\n`;\n\nconst Category = ({\n  categorySlug\n}) => {\n  console.log('Cat slug: ');\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY, {\n    variables: {\n      categorySlug\n    }\n  });\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByCategory.map(post => ({\n    title: post.title,\n    datetime: post.created_at,\n    category: post.category,\n    tags: post.tags,\n    image: post.image,\n    slug: post.slug\n  }));\n  return __jsx(\"main\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"section\", {\n    className: \"featured-posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(PostsMasonry, {\n    posts: fetchedPosts,\n    columns: 2,\n    tagsOnTop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default withApollo({\n  \"ssr\": true\n})(Category);","map":{"version":3,"sources":["D:/Site/showandnews/components/Category/index.js"],"names":["withApollo","gql","useQuery","PostsMasonry","QUERY","Category","categorySlug","console","log","loading","error","data","variables","fetchedPosts","getPostsByCategory","map","post","title","datetime","created_at","category","tags","image","slug"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,YAAP,MAAyB,gCAAzB;AAGA,MAAMC,KAAK,GAAGH,GAAI;;;;;;;;;;;;;;CAAlB;;AAiBA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACE,KAAD,EAAQ;AAC/CQ,IAAAA,SAAS,EAAE;AACTN,MAAAA;AADS;AADoC,GAAR,CAAzC;AAMA,MAAII,KAAJ,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACF,MAAID,OAAJ,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEF,QAAMI,YAAY,GAAGF,IAAI,CAACG,kBAAL,CAAwBC,GAAxB,CAA4BC,IAAI,KACnD;AACEC,IAAAA,KAAK,EAAED,IAAI,CAACC,KADd;AAEEC,IAAAA,QAAQ,EAAEF,IAAI,CAACG,UAFjB;AAGEC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHjB;AAIEC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAJb;AAKEC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KALd;AAMEC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AANb,GADmD,CAAhC,CAArB;AAWA,SACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEV,YAArB;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAA+C,IAAA,SAAS,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF;AAWD,CAnCD;;AAqCA,eAAeb,UAAU,CAAC;AAAC,SAAO;AAAR,CAAD,CAAV,CAA0BK,QAA1B,CAAf","sourcesContent":["import withApollo from '@/lib/withApollo'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport PostsMasonry from '@/components/feed/PostsMasonry'\r\n\r\n\r\nconst QUERY = gql`\r\n  query postsByCategory($categorySlug: String){\r\n    getPostsByCategory(categorySlug: $categorySlug) {\r\n      id\r\n      image\r\n      title\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst Category = ({ categorySlug }) => {\r\n  console.log('Cat slug: ');\r\n  const { loading, error, data } = useQuery(QUERY, {\r\n    variables: {\r\n      categorySlug\r\n    }\r\n  });\r\n\r\n  if (error)\r\n    return <h1>Error</h1>\r\n  if (loading)\r\n    return <h1>Loading...</h1>;\r\n\r\n  const fetchedPosts = data.getPostsByCategory.map(post => (\r\n    {\r\n      title: post.title,\r\n      datetime: post.created_at,\r\n      category: post.category,\r\n      tags: post.tags,\r\n      image: post.image,\r\n      slug: post.slug\r\n    }\r\n  ))\r\n\r\n  return (\r\n    <main className=\"home\">\r\n      <section className=\"container\">\r\n        <div className=\"row\">\r\n          <section className=\"featured-posts-container\">\r\n            <PostsMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default withApollo({\"ssr\": true})(Category)"]},"metadata":{},"sourceType":"module"}