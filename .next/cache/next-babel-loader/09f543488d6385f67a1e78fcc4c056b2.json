{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\pages\\\\_app.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withApollo from 'next-with-apollo';\nimport Head from 'next/head';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost'; // import { ConfigProvider } from 'antd';\n// import ruRU from 'antd/es/locale/ru_RU';\n//* Styles\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport 'antd/dist/antd.css';\nimport '@/styles/base.scss';\n\nvar NewsApp = function NewsApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps,\n      apollo = _ref.apollo;\n  return __jsx(ApolloProvider, {\n    client: apollo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1, user-scalable=0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  })), __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  })));\n};\n\n_c = NewsApp;\nexport default withApollo(function (_ref2) {\n  var initialState = _ref2.initialState;\n  return new ApolloClient({\n    uri: 'http://192.168.1.35:4000/graphql',\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n})(NewsApp);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsApp\");","map":{"version":3,"sources":["D:/Site/showandnews/pages/_app.js"],"names":["withApollo","Head","ApolloProvider","ApolloClient","InMemoryCache","NewsApp","Component","pageProps","apollo","initialState","uri","cache","restore"],"mappings":";;;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C,C,CACA;AACA;AAEA;;AACA,OAAO,gCAAP;AACA,OAAO,sCAAP;AACA,OAAO,oBAAP;AACA,OAAO,oBAAP;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,SAAd,QAAcA,SAAd;AAAA,MAAyBC,MAAzB,QAAyBA,MAAzB;AAAA,SACd,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC,sDAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAKE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALF,CADc;AAAA,CAAhB;;KAAMF,O;AAWN,eAAeL,UAAU,CAAC,iBAAsB;AAAA,MAAnBS,YAAmB,SAAnBA,YAAmB;AAC9C,SAAO,IAAIN,YAAJ,CAAiB;AACtBO,IAAAA,GAAG,EAAE,kCADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIP,aAAJ,GAAoBQ,OAApB,CAA4BH,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CALwB,CAAV,CAKZJ,OALY,CAAf","sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport Head from 'next/head';\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\r\n// import { ConfigProvider } from 'antd';\r\n// import ruRU from 'antd/es/locale/ru_RU';\r\n\r\n//* Styles\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport 'antd/dist/antd.css';\r\nimport '@/styles/base.scss';\r\n\r\n\r\nconst NewsApp = ({ Component, pageProps, apollo }) => (\r\n  <ApolloProvider client={apollo}>\r\n    {/* <ConfigProvider locale={ruRU}> */}\r\n    <Head>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=0\" />\r\n    </Head>\r\n    <Component {...pageProps} />\r\n    {/* </ConfigProvider> */}\r\n  </ApolloProvider>\r\n)\r\n\r\nexport default withApollo(({ initialState }) => {\r\n  return new ApolloClient({\r\n    uri: 'http://192.168.1.35:4000/graphql',\r\n    cache: new InMemoryCache().restore(initialState || {})\r\n  });\r\n})(NewsApp);"]},"metadata":{},"sourceType":"module"}