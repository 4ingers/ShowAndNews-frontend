{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\pages\\\\CategoryLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPostsByCategory($catSlug: String, $offset: Int, $limit: Int) {\\n    getPostsByCategoryCount(catSlug: $catSlug)\\n    getPostsByCategory(catSlug: $catSlug, offset: $offset, limit: $limit) {\\n      id\\n      image\\n      title\\n      content\\n      created_at\\n      category\\n      description\\n      author\\n      tags\\n      slug\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { Pagination } from 'antd';\nimport useUpdateEffect from './hooks';\nimport styles from './styles.module.scss';\nimport PostsGrid from '@/components/feed/PostsGrid';\nvar GET_POSTS = gql(_templateObject());\n\nvar CategoryLayout = function CategoryLayout(_ref) {\n  _s();\n\n  var catSlug = _ref.slug;\n  var initialPageSize = 9;\n\n  var _useState = useState(initialPageSize),\n      pageSize = _useState[0],\n      setPageSize = _useState[1];\n\n  var _useState2 = useState(1),\n      currentPage = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var _useState3 = useState(0),\n      total = _useState3[0],\n      setTotal = _useState3[1];\n\n  useUpdateEffect(function () {\n    window.scroll({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [currentPage, pageSize]);\n\n  var onShowSizeChange = function onShowSizeChange(_, pageSize) {\n    setCurrent(1);\n    setPageSize(pageSize);\n  };\n\n  var _useQuery = useQuery(GET_POSTS, {\n    variables: {\n      catSlug: catSlug,\n      offset: (currentPage - 1) * pageSize,\n      limit: pageSize\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430!\");\n  if (loading) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\");\n  var posts = data.getPostsByCategory.map(function (post) {\n    return {\n      title: post.title,\n      description: post.description,\n      content: post.content,\n      datetime: post.created_at,\n      category: post.category,\n      tags: post.tags,\n      image: post.image,\n      slug: post.slug\n    };\n  });\n  setTotal(data.getPostsByCategoryCount);\n  return __jsx(\"section\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: styles.featuredPostsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(PostsGrid, {\n    posts: posts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), __jsx(Pagination, {\n    showSizeChanger: true,\n    onShowSizeChange: onShowSizeChange,\n    pageSize: pageSize,\n    total: data.getPostsByCategoryCount,\n    defaultCurrent: currentPage,\n    onChange: setCurrent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(CategoryLayout, \"t2wu7NBcC8ozKN/xLrthb+rLZX0=\", false, function () {\n  return [useUpdateEffect, useQuery];\n});\n\n_c = CategoryLayout;\nexport default CategoryLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryLayout\");","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/pages/CategoryLayout/index.js"],"names":["useState","useEffect","useQuery","gql","Pagination","useUpdateEffect","styles","PostsGrid","GET_POSTS","CategoryLayout","catSlug","slug","initialPageSize","pageSize","setPageSize","currentPage","setCurrent","total","setTotal","window","scroll","top","behavior","onShowSizeChange","_","variables","offset","limit","loading","error","data","posts","getPostsByCategory","map","post","title","description","content","datetime","created_at","category","tags","image","getPostsByCategoryCount","container","row","featuredPostsContainer"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport { gql } from 'apollo-boost'\r\nimport { Pagination } from 'antd'\r\n\r\nimport useUpdateEffect from './hooks'\r\nimport styles from './styles.module.scss'\r\nimport PostsGrid from '@/components/feed/PostsGrid'\r\n\r\n\r\nconst GET_POSTS = gql`\r\n  query getPostsByCategory($catSlug: String, $offset: Int, $limit: Int) {\r\n    getPostsByCategoryCount(catSlug: $catSlug)\r\n    getPostsByCategory(catSlug: $catSlug, offset: $offset, limit: $limit) {\r\n      id\r\n      image\r\n      title\r\n      content\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst CategoryLayout = ({ slug: catSlug }) => {\r\n  const initialPageSize = 9\r\n  \r\n  const [pageSize, setPageSize] = useState(initialPageSize)\r\n  const [currentPage, setCurrent] = useState(1)\r\n  const [total, setTotal] = useState(0);\r\n  \r\n  useUpdateEffect(() => {\r\n    window.scroll({ top: 0, behavior: 'smooth' })\r\n  }, [currentPage, pageSize])\r\n  \r\n  const onShowSizeChange = (_, pageSize) => {\r\n    setCurrent(1)\r\n    setPageSize(pageSize)\r\n  }\r\n  \r\n  const { loading, error, data } = useQuery(GET_POSTS, {\r\n    variables: {\r\n      catSlug,\r\n      offset: (currentPage - 1) * pageSize,\r\n      limit: pageSize\r\n    }\r\n  })\r\n  if (error) return <h1>Ошибка!</h1>\r\n  if (loading) return <h1>Загрузка...</h1>\r\n  \r\n  const posts = data.getPostsByCategory.map((post) => ({\r\n    title: post.title,\r\n    description: post.description,\r\n    content: post.content,\r\n    datetime: post.created_at,\r\n    category: post.category,\r\n    tags: post.tags,\r\n    image: post.image,\r\n    slug: post.slug\r\n  }))\r\n\r\n  setTotal(data.getPostsByCategoryCount)\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.row}>\r\n        <section className={styles.featuredPostsContainer}>\r\n          <PostsGrid posts={posts} />\r\n          <Pagination\r\n            showSizeChanger\r\n            onShowSizeChange={onShowSizeChange}\r\n            pageSize={pageSize}\r\n            total={data.getPostsByCategoryCount}\r\n            defaultCurrent={currentPage}\r\n            onChange={setCurrent}\r\n          />\r\n        </section>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CategoryLayout"]},"metadata":{},"sourceType":"module"}