{"ast":null,"code":"function datetimeSince(time) {\n  var since = new Date(time);\n  var timeFormats = [[60, 'seconds', 1], [60 * 2, '1 minute ago', '1 minute from now'], // 60*2\n  [60 * 60, 'minutes', 60], // 60*60, 60\n  [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n  [86400, 'hours', 3600], // 60*60*24, 60*60\n  [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n  [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n  [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n  [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n  [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n  [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n  [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n  [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n  [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n  [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n  ];\n  var seconds = (new Date() - since) / 1000,\n      token = 'ago',\n      list_choice = 1;\n  if (seconds == 0) return 'Just now';\n\n  if (seconds < 0) {\n    seconds = Math.abs(seconds);\n    token = 'from now';\n    list_choice = 2;\n  }\n\n  var format;\n\n  for (var i = 0; format = timeFormats[i]; i++) {\n    // while (format = timeFormats[i++]) {\n    if (seconds < format[0]) {\n      if (typeof format[2] == 'string') return format[list_choice];else return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n    }\n  }\n\n  return since;\n}\n\nexport default datetimeSince;","map":{"version":3,"sources":["D:/Site/showandnews/services/datetime-since/index.js"],"names":["datetimeSince","time","since","Date","timeFormats","seconds","token","list_choice","Math","abs","format","i","floor"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAE3B,MAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAZ;AAEA,MAAIG,WAAW,GAAG,CAChB,CAAC,EAAD,EAAK,SAAL,EAAgB,CAAhB,CADgB,EAEhB,CAAC,KAAG,CAAJ,EAAO,cAAP,EAAuB,mBAAvB,CAFgB,EAE6B;AAC7C,GAAC,KAAG,EAAJ,EAAQ,SAAR,EAAmB,EAAnB,CAHgB,EAGQ;AACxB,GAAC,IAAD,EAAO,YAAP,EAAqB,iBAArB,CAJgB,EAIyB;AACzC,GAAC,KAAD,EAAQ,OAAR,EAAiB,IAAjB,CALgB,EAKQ;AACxB,GAAC,MAAD,EAAS,WAAT,EAAsB,UAAtB,CANgB,EAMmB;AACnC,GAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAPgB,EAOS;AACzB,GAAC,OAAD,EAAU,WAAV,EAAuB,WAAvB,CARgB,EAQqB;AACrC,GAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CATgB,EASY;AAC5B,GAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,CAVgB,EAUuB;AACvC,GAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CAXgB,EAWe;AAC/B,GAAC,QAAD,EAAW,WAAX,EAAwB,WAAxB,CAZgB,EAYsB;AACtC,GAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,CAbgB,EAaiB;AACjC,GAAC,UAAD,EAAa,cAAb,EAA6B,cAA7B,CAdgB,EAc8B;AAC9C,GAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,CAfgB,CAeuB;AAfvB,GAAlB;AAiBA,MAAIC,OAAO,GAAG,CAAC,IAAIF,IAAJ,KAAaD,KAAd,IAAuB,IAArC;AAAA,MACEI,KAAK,GAAG,KADV;AAAA,MAEEC,WAAW,GAAG,CAFhB;AAIA,MAAIF,OAAO,IAAI,CAAf,EACE,OAAO,UAAP;;AAGF,MAAIA,OAAO,GAAG,CAAd,EAAiB;AACfA,IAAAA,OAAO,GAAGG,IAAI,CAACC,GAAL,CAASJ,OAAT,CAAV;AACAC,IAAAA,KAAK,GAAG,UAAR;AACAC,IAAAA,WAAW,GAAG,CAAd;AACD;;AACD,MAAIG,MAAJ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,MAAM,GAAGN,WAAW,CAACO,CAAD,CAApC,EAAyCA,CAAC,EAA1C,EAA8C;AAC9C;AACE,QAAIN,OAAO,GAAGK,MAAM,CAAC,CAAD,CAApB,EAAyB;AACvB,UAAI,OAAOA,MAAM,CAAC,CAAD,CAAb,IAAoB,QAAxB,EACE,OAAOA,MAAM,CAACH,WAAD,CAAb,CADF,KAGE,OAAOC,IAAI,CAACI,KAAL,CAAWP,OAAO,GAAGK,MAAM,CAAC,CAAD,CAA3B,IAAkC,GAAlC,GAAwCA,MAAM,CAAC,CAAD,CAA9C,GAAoD,GAApD,GAA0DJ,KAAjE;AACH;AACF;;AACD,SAAOJ,KAAP;AACD;;AAGD,eAAeF,aAAf","sourcesContent":["function datetimeSince(time) {\r\n\r\n  let since = new Date(time)\r\n\r\n  var timeFormats = [\r\n    [60, 'seconds', 1],\r\n    [60*2, '1 minute ago', '1 minute from now'], // 60*2\r\n    [60*60, 'minutes', 60], // 60*60, 60\r\n    [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n    [86400, 'hours', 3600], // 60*60*24, 60*60\r\n    [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n    [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n    [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n    [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n    [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n    [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n    [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n    [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n    [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n    [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n  ];\r\n  let seconds = (new Date() - since) / 1000,\r\n    token = 'ago',\r\n    list_choice = 1;\r\n\r\n  if (seconds == 0) \r\n    return 'Just now'\r\n  \r\n\r\n  if (seconds < 0) {\r\n    seconds = Math.abs(seconds);\r\n    token = 'from now';\r\n    list_choice = 2;\r\n  }\r\n  let format;\r\n  for (let i = 0; format = timeFormats[i]; i++) {\r\n  // while (format = timeFormats[i++]) {\r\n    if (seconds < format[0]) {\r\n      if (typeof format[2] == 'string')\r\n        return format[list_choice];\r\n      else\r\n        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n    }\r\n  }\r\n  return since;\r\n}\r\n\r\n\r\nexport default datetimeSince"]},"metadata":{},"sourceType":"module"}