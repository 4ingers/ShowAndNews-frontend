{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\feed\\\\PostsGrid\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useMemo } from 'react';\nimport Link from 'next/link';\nimport { Pagination } from 'antd';\nimport { ConfigProvider } from 'antd';\nimport ruRU from 'antd/es/locale/ru_RU';\nimport styles from './styles.module.scss';\nimport useUpdateEffect from './hooks';\nimport TagRow from '@/components/feed/TagRow';\n\nvar PostsGrid = function PostsGrid(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  var _useState = useState(9),\n      pageSize = _useState[0],\n      setPageSize = _useState[1];\n\n  var _useState2 = useState(1),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var paginatedPosts = useMemo(function () {\n    var lastIndex = current * pageSize;\n    var firstIndex = lastIndex - pageSize;\n    return posts.slice(firstIndex, lastIndex);\n  }, [current, pageSize, posts]);\n  useUpdateEffect(function () {\n    window.scroll({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [current, pageSize]);\n  return __jsx(\"section\", {\n    className: styles.gridPaginationContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: styles.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, paginatedPosts.map(function (post, index) {\n    return __jsx(\"div\", {\n      className: styles.postContainer,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, __jsx(\"figure\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/post/\".concat(post.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: \"/images/\".concat(post.image),\n      alt: post.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    })))), __jsx(TagRow, {\n      tags: post.tags,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }), __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, post.title), __jsx(\"p\", {\n      className: styles.authorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, post.created_at)), __jsx(\"p\", {\n      className: styles.descriptionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, post.description), __jsx(Link, {\n      href: \"post/\".concat(post.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")));\n  })), __jsx(Pagination // showSizeChanger\n  , {\n    onShowSizeChange: setPageSize,\n    pageSize: pageSize,\n    total: posts.length,\n    defaultCurrent: current,\n    onChange: setCurrent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(PostsGrid, \"Ie5XS4A97YeyQE5jPmP5B5PmCzM=\", false, function () {\n  return [useUpdateEffect];\n});\n\n_c = PostsGrid;\nexport default PostsGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostsGrid\");","map":{"version":3,"sources":["D:/Site/showandnews/components/feed/PostsGrid/index.js"],"names":["useState","useMemo","Link","Pagination","ConfigProvider","ruRU","styles","useUpdateEffect","TagRow","PostsGrid","posts","pageSize","setPageSize","current","setCurrent","paginatedPosts","lastIndex","firstIndex","slice","window","scroll","top","behavior","gridPaginationContainer","gridContainer","map","post","index","postContainer","slug","image","tags","title","authorText","created_at","descriptionText","description","length"],"mappings":"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","sourcesContent":["import { useState, useMemo } from 'react'\r\nimport Link from 'next/link'\r\nimport { Pagination } from 'antd'\r\nimport { ConfigProvider } from 'antd';\r\nimport ruRU from 'antd/es/locale/ru_RU';\r\n\r\nimport styles from './styles.module.scss'\r\nimport useUpdateEffect from './hooks'\r\nimport TagRow from '@/components/feed/TagRow'\r\n\r\n\r\nconst PostsGrid = ({ posts }) => {\r\n  const [pageSize, setPageSize] = useState(9)\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const paginatedPosts = useMemo(() => {\r\n    const lastIndex = current * pageSize\r\n    const firstIndex = lastIndex - pageSize\r\n\r\n    return posts.slice(firstIndex, lastIndex)\r\n  }, [current, pageSize, posts])\r\n\r\n  useUpdateEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }, [current, pageSize])\r\n\r\n  return (\r\n    <section className={styles.gridPaginationContainer}>\r\n      <section className={styles.gridContainer}>\r\n        {paginatedPosts.map((post, index) => (\r\n          <div className={styles.postContainer} key={index}>\r\n            <figure>\r\n              <Link href={`/post/${post.slug}`}>\r\n                <a>\r\n                  <img src={`/images/${post.image}`} alt={post.image} />\r\n                </a>\r\n              </Link>\r\n            </figure>\r\n\r\n            <TagRow tags={post.tags} />\r\n\r\n            <h2>\r\n              {post.title}\r\n            </h2>\r\n\r\n            <p className={styles.authorText}>\r\n              <span>\r\n                {post.created_at}\r\n              </span>\r\n            </p>\r\n\r\n            <p className={styles.descriptionText}>\r\n              {post.description}\r\n            </p>\r\n\r\n            <Link href={`post/${post.slug}`}>\r\n              <a>Подробнее</a>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </section>\r\n\r\n      <Pagination\r\n        // showSizeChanger\r\n        onShowSizeChange={setPageSize}\r\n        pageSize={pageSize}\r\n        total={posts.length}\r\n        defaultCurrent={current}\r\n        onChange={setCurrent}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostsGrid"]},"metadata":{},"sourceType":"module"}