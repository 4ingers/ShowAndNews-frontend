{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from 'next-with-apollo';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport '@/styles/base.scss';\nconst apollo = new ApolloClient({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache().restore(initialState || {})\n});\n\nconst App = ({\n  Component,\n  pageProps,\n  apollo\n}) => __jsx(ApolloProvider, {\n  client: apollo,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }\n}, __jsx(Component, _extends({}, pageProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n})));\n\nexport default withApollo(({\n  initialState\n}) => {\n  return apollo(initialState);\n})(App);","map":{"version":3,"sources":["D:/Site/showandnews/pages/_app.js"],"names":["withApollo","ApolloProvider","ApolloClient","InMemoryCache","apollo","uri","cache","restore","initialState","App","Component","pageProps"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AAEA,OAAO,oBAAP;AAEA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC9BG,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIH,aAAJ,GAAoBI,OAApB,CAA4BC,YAAY,IAAI,EAA5C;AAFuB,CAAjB,CAAf;;AAMA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBP,EAAAA;AAAxB,CAAD,KACV,MAAC,cAAD;AAAgB,EAAA,MAAM,EAAEA,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD,eAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF,CADF;;AAMA,eAAeX,UAAU,CAAC,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAsB;AAC9C,SAAOJ,MAAM,CAACI,YAAD,CAAb;AACD,CAFwB,CAAV,CAEZC,GAFY,CAAf","sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport { ApolloProvider } from '@apollo/react-hooks'\r\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\r\n\r\nimport '@/styles/base.scss';\r\n\r\nconst apollo = new ApolloClient({\r\n  uri: 'http://localhost:4000/graphql',\r\n  cache: new InMemoryCache().restore(initialState || {})\r\n})\r\n\r\n \r\nconst App = ({ Component, pageProps, apollo }) => (\r\n  <ApolloProvider client={apollo}>\r\n    <Component {...pageProps} />\r\n  </ApolloProvider>\r\n);\r\n \r\nexport default withApollo(({ initialState }) => {\r\n  return apollo(initialState)\r\n})(App);"]},"metadata":{},"sourceType":"module"}