{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\pages\\\\TagLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getPostsByTag($tagSlug: String, $offset: Int, $limit: Int) {\\n    getPostsByTag(tagSlug: $tagSlug, offset: $offset, limit: $limit) {\\n      id\\n      image\\n      title\\n      content\\n      created_at\\n      category\\n      description\\n      author\\n      tags\\n      slug\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport classnames from 'classnames';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module.scss';\nvar GET_POSTS = gql(_templateObject());\n\nvar TagLayout = function TagLayout(_ref) {\n  _s();\n\n  var tagSlug = _ref.slug;\n  var initialOffset = 0;\n  var initialLimit = 1000;\n\n  var _useQuery = useQuery(GET_POSTS, {\n    variables: {\n      tagSlug: tagSlug,\n      offset: initialOffset,\n      limit: initialLimit\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  var fetchedPosts = data.getPostsByTag.map(function (post) {\n    return _objectSpread({}, post);\n  });\n  return __jsx(\"pre\", {\n    className: classnames(styles.content),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, JSON.stringify(fetchedPosts, null, 2));\n};\n\n_s(TagLayout, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = TagLayout;\nexport default TagLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagLayout\");","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/pages/TagLayout/index.js"],"names":["classnames","gql","useQuery","styles","GET_POSTS","TagLayout","tagSlug","slug","initialOffset","initialLimit","variables","offset","limit","loading","error","data","fetchedPosts","getPostsByTag","map","post","content","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,IAAMC,SAAS,GAAGH,GAAH,mBAAf;;AAiBA,IAAMI,SAAS,GAAG,SAAZA,SAAY,OAAuB;AAAA;;AAAA,MAAdC,OAAc,QAApBC,IAAoB;AACvC,MAAMC,aAAa,GAAG,CAAtB;AACA,MAAMC,YAAY,GAAG,IAArB;;AAFuC,kBAINP,QAAQ,CAACE,SAAD,EAAY;AACnDM,IAAAA,SAAS,EAAE;AACTJ,MAAAA,OAAO,EAAPA,OADS;AAETK,MAAAA,MAAM,EAAEH,aAFC;AAGTI,MAAAA,KAAK,EAAEH;AAHE;AADwC,GAAZ,CAJF;AAAA,MAI/BI,OAJ+B,aAI/BA,OAJ+B;AAAA,MAItBC,KAJsB,aAItBA,KAJsB;AAAA,MAIfC,IAJe,aAIfA,IAJe;;AAWvC,MAAID,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,MAAMG,YAAY,GAAGD,IAAI,CAACE,aAAL,CAAmBC,GAAnB,CAAuB,UAAAC,IAAI;AAAA,6BAAUA,IAAV;AAAA,GAA3B,CAArB;AAEA,SACE;AAAK,IAAA,SAAS,EAAEnB,UAAU,CAACG,MAAM,CAACiB,OAAR,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,SAAL,CAAeN,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CADH,CADF;AAKD,CArBD;;GAAMX,S;UAI6BH,Q;;;KAJ7BG,S;AAuBN,eAAeA,SAAf","sourcesContent":["import classnames from 'classnames'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module.scss'\r\n\r\n\r\nconst GET_POSTS = gql`\r\n  query getPostsByTag($tagSlug: String, $offset: Int, $limit: Int) {\r\n    getPostsByTag(tagSlug: $tagSlug, offset: $offset, limit: $limit) {\r\n      id\r\n      image\r\n      title\r\n      content\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\nconst TagLayout = ({ slug: tagSlug }) => {\r\n  const initialOffset = 0\r\n  const initialLimit = 1000\r\n\r\n  const { loading, error, data } = useQuery(GET_POSTS, {\r\n    variables: {\r\n      tagSlug,\r\n      offset: initialOffset,\r\n      limit: initialLimit\r\n    }\r\n  });\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  const fetchedPosts = data.getPostsByTag.map(post => ({ ...post }))\r\n\r\n  return (\r\n    <pre className={classnames(styles.content)}>\r\n      {JSON.stringify(fetchedPosts, null, 2)}\r\n    </pre>\r\n  )\r\n}\r\n\r\nexport default TagLayout"]},"metadata":{},"sourceType":"module"}