{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query postsByCategory($slug: String){\\n    getPostsByCategory(slug: $slug) {\\n      id\\n      image\\n      title\\n      created_at\\n      category\\n      description\\n      author\\n      tags\\n      slug\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module';\nimport PostsMasonry from '@/components/feed/PostsMasonry';\nvar QUERY = gql(_templateObject());\n\nvar Category = function Category(_ref) {\n  _s();\n\n  var slug = _ref.slug;\n\n  var _useQuery = useQuery(QUERY, {\n    variables: {\n      slug: slug\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (error) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, \"Loading...\");\n  var fetchedPosts = data.getPostsByCategory.map(function (post) {\n    return {\n      title: post.title,\n      datetime: post.created_at,\n      category: post.category,\n      tags: post.tags,\n      image: post.image,\n      slug: post.slug\n    };\n  });\n  return __jsx(\"section\", {\n    className: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: styles.featuredPostsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(PostsMasonry, {\n    posts: fetchedPosts,\n    columns: 2,\n    tagsOnTop: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Category, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["D:/Site/showandnews/components/Category/index.js"],"names":["gql","useQuery","styles","PostsMasonry","QUERY","Category","slug","variables","loading","error","data","fetchedPosts","getPostsByCategory","map","post","title","datetime","created_at","category","tags","image","container","row","featuredPostsContainer"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAGA,IAAMC,KAAK,GAAGJ,GAAH,mBAAX;;AAiBA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACIL,QAAQ,CAACG,KAAD,EAAQ;AAC/CG,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAJA;AADS;AADoC,GAAR,CADZ;AAAA,MACrBE,OADqB,aACrBA,OADqB;AAAA,MACZC,KADY,aACZA,KADY;AAAA,MACLC,IADK,aACLA,IADK;;AAO7B,MAAID,KAAJ,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACF,MAAID,OAAJ,EACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEF,MAAMG,YAAY,GAAGD,IAAI,CAACE,kBAAL,CAAwBC,GAAxB,CAA4B,UAAAC,IAAI;AAAA,WACnD;AACEC,MAAAA,KAAK,EAAED,IAAI,CAACC,KADd;AAEEC,MAAAA,QAAQ,EAAEF,IAAI,CAACG,UAFjB;AAGEC,MAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHjB;AAIEC,MAAAA,IAAI,EAAEL,IAAI,CAACK,IAJb;AAKEC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KALd;AAMEd,MAAAA,IAAI,EAAEQ,IAAI,CAACR;AANb,KADmD;AAAA,GAAhC,CAArB;AAWA,SACE;AAAS,IAAA,SAAS,EAAEJ,MAAM,CAACmB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAACoB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAEpB,MAAM,CAACqB,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEZ,YAArB;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAA+C,IAAA,SAAS,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AASD,CAhCD;;GAAMN,Q;UAC6BJ,Q;;;KAD7BI,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module'\r\nimport PostsMasonry from '@/components/feed/PostsMasonry'\r\n\r\n\r\nconst QUERY = gql`\r\n  query postsByCategory($slug: String){\r\n    getPostsByCategory(slug: $slug) {\r\n      id\r\n      image\r\n      title\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst Category = ({ slug }) => {\r\n  const { loading, error, data } = useQuery(QUERY, {\r\n    variables: {\r\n      slug\r\n    }\r\n  });\r\n\r\n  if (error)\r\n    return <h1>Error</h1>\r\n  if (loading)\r\n    return <h1>Loading...</h1>;\r\n\r\n  const fetchedPosts = data.getPostsByCategory.map(post => (\r\n    {\r\n      title: post.title,\r\n      datetime: post.created_at,\r\n      category: post.category,\r\n      tags: post.tags,\r\n      image: post.image,\r\n      slug: post.slug\r\n    }\r\n  ))\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.row}>\r\n        <section className={styles.featuredPostsContainer}>\r\n          <PostsMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} />\r\n        </section>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Category"]},"metadata":{},"sourceType":"module"}