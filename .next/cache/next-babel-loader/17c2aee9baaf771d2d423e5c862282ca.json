{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\body\\\\feed\\\\PostGrid.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect } from 'react';\nimport { Link } from 'next'; // Get rid of it\n\nimport { Pagination } from 'antd';\nimport { TagRow } from '../post';\nexport default function PostGrid({\n  posts\n}) {\n  const {\n    0: pageSize,\n    1: setPageSize\n  } = useState(9);\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(1);\n  const paginatedPosts = useMemo(() => {\n    const lastIndex = current * pageSize;\n    const firstIndex = lastIndex - pageSize;\n    return posts.slice(firstIndex, lastIndex);\n  }, [current, pageSize, posts]);\n  useEffect(() => {\n    window.scroll({\n      top: 500,\n      left: 0,\n      behavior: 'smooth'\n    });\n  }, [current, pageSize]);\n  return __jsx(\"section\", {\n    className: \"grid-pagination-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"post-grid container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, paginatedPosts.map((post, index) => __jsx(\"div\", {\n    className: \"post-container\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: post.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, __jsx(\"img\", {\n    src: url(`/images/${post.image}`),\n    alt: post.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })))), __jsx(TagRow, {\n    tags: post.categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, post.title), __jsx(\"p\", {\n    className: \"author-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, post.date)), __jsx(\"p\", {\n    className: \"description-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, post.description), __jsx(Link, {\n    href: post.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Read more...\"))))), __jsx(Pagination, {\n    simple: true,\n    showSizeChanger: true,\n    onShowSizeChange: setPageSize,\n    pageSize: pageSize,\n    total: posts.length,\n    defaultCurrent: current,\n    onChange: setCurrent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/Site/showandnews/components/body/feed/PostGrid.js"],"names":["React","useState","useMemo","useEffect","Link","Pagination","TagRow","PostGrid","posts","pageSize","setPageSize","current","setCurrent","paginatedPosts","lastIndex","firstIndex","slice","window","scroll","top","left","behavior","map","post","index","link","url","image","categories","title","date","description","length"],"mappings":"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","sourcesContent":["import React, {useState, useMemo, useEffect} from 'react'\r\nimport {Link} from 'next'\r\n// Get rid of it\r\nimport {Pagination} from 'antd'\r\nimport {TagRow} from '../post'\r\n\r\nexport default function PostGrid({posts}) {\r\n  const [pageSize, setPageSize] = useState(9)\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const paginatedPosts = useMemo(() => {\r\n    const lastIndex = current * pageSize\r\n    const firstIndex = lastIndex - pageSize\r\n\r\n    return posts.slice(firstIndex, lastIndex)\r\n  }, [current, pageSize, posts])\r\n\r\n  useEffect(() => {\r\n    window.scroll({\r\n      top: 500,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }, [current, pageSize]);\r\n   \r\n  return (\r\n    <section className=\"grid-pagination-container\">\r\n      <section className=\"post-grid container\">\r\n      {paginatedPosts.map((post, index) => (\r\n        <div className=\"post-container\" key={index}>\r\n          <figure>\r\n            <Link href={post.link}>\r\n              <a>\r\n                <img src={url(`/images/${post.image}`)} alt={post.image} />\r\n              </a>\r\n            </Link>\r\n          </figure>\r\n          <TagRow tags={post.categories} />\r\n          <h2>{post.title}</h2>\r\n          <p className=\"author-text\">\r\n            <span>\r\n              {post.date}\r\n            </span>\r\n          </p>\r\n          <p className=\"description-text\">\r\n            {post.description}\r\n          </p>\r\n          <Link href={post.link}>\r\n            <a>\r\n              Read more...\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n      </section>\r\n      <Pagination \r\n        simple\r\n        showSizeChanger \r\n        onShowSizeChange={setPageSize} \r\n        pageSize={pageSize} \r\n        total={posts.length}\r\n        defaultCurrent={current}\r\n        onChange={setCurrent}\r\n      />\r\n    </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}