{"ast":null,"code":"function datetimeSince(time) {\n  var since = new Date(time);\n\n  switch (typeof time) {\n    case 'number':\n      break;\n\n    case 'string':\n      time = +new Date(time);\n      break;\n\n    case 'object':\n      if (time.constructor === Date) time = time.getTime();\n      break;\n\n    default:\n      time = +new Date();\n  }\n\n  var time_formats = [[60, 'seconds', 1], // 60\n  [120, '1 minute ago', '1 minute from now'], // 60*2\n  [3600, 'minutes', 60], // 60*60, 60\n  [7200, '1 hour ago', '1 hour from now'], // 60*60*2\n  [86400, 'hours', 3600], // 60*60*24, 60*60\n  [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\n  [604800, 'days', 86400], // 60*60*24*7, 60*60*24\n  [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\n  [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\n  [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\n  [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\n  [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\n  [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\n  [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\n  [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\n  ];\n  var seconds = (+new Date() - time) / 1000,\n      token = 'ago',\n      list_choice = 1;\n\n  if (seconds == 0) {\n    return 'Just now';\n  }\n\n  if (seconds < 0) {\n    seconds = Math.abs(seconds);\n    token = 'from now';\n    list_choice = 2;\n  }\n\n  var i = 0,\n      format;\n\n  while (format = time_formats[i++]) {\n    if (seconds < format[0]) {\n      if (typeof format[2] == 'string') return format[list_choice];else return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\n    }\n  }\n\n  return time;\n}\n\nexport default datetimeSince;","map":{"version":3,"sources":["D:/Site/showandnews/services/datetime-since/index.js"],"names":["datetimeSince","time","since","Date","constructor","getTime","time_formats","seconds","token","list_choice","Math","abs","i","format","floor"],"mappings":"AAAA,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAE3B,MAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAZ;;AAEA,UAAQ,OAAOA,IAAf;AACE,SAAK,QAAL;AACE;;AACF,SAAK,QAAL;AACEA,MAAAA,IAAI,GAAG,CAAC,IAAIE,IAAJ,CAASF,IAAT,CAAR;AACA;;AACF,SAAK,QAAL;AACE,UAAIA,IAAI,CAACG,WAAL,KAAqBD,IAAzB,EAA+BF,IAAI,GAAGA,IAAI,CAACI,OAAL,EAAP;AAC/B;;AACF;AACEJ,MAAAA,IAAI,GAAG,CAAC,IAAIE,IAAJ,EAAR;AAVJ;;AAYA,MAAIG,YAAY,GAAG,CACjB,CAAC,EAAD,EAAK,SAAL,EAAgB,CAAhB,CADiB,EACG;AACpB,GAAC,GAAD,EAAM,cAAN,EAAsB,mBAAtB,CAFiB,EAE2B;AAC5C,GAAC,IAAD,EAAO,SAAP,EAAkB,EAAlB,CAHiB,EAGM;AACvB,GAAC,IAAD,EAAO,YAAP,EAAqB,iBAArB,CAJiB,EAIwB;AACzC,GAAC,KAAD,EAAQ,OAAR,EAAiB,IAAjB,CALiB,EAKO;AACxB,GAAC,MAAD,EAAS,WAAT,EAAsB,UAAtB,CANiB,EAMkB;AACnC,GAAC,MAAD,EAAS,MAAT,EAAiB,KAAjB,CAPiB,EAOQ;AACzB,GAAC,OAAD,EAAU,WAAV,EAAuB,WAAvB,CARiB,EAQoB;AACrC,GAAC,OAAD,EAAU,OAAV,EAAmB,MAAnB,CATiB,EASW;AAC5B,GAAC,OAAD,EAAU,YAAV,EAAwB,YAAxB,CAViB,EAUsB;AACvC,GAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CAXiB,EAWc;AAC/B,GAAC,QAAD,EAAW,WAAX,EAAwB,WAAxB,CAZiB,EAYqB;AACtC,GAAC,UAAD,EAAa,OAAb,EAAsB,QAAtB,CAbiB,EAagB;AACjC,GAAC,UAAD,EAAa,cAAb,EAA6B,cAA7B,CAdiB,EAc6B;AAC9C,GAAC,WAAD,EAAc,WAAd,EAA2B,UAA3B,CAfiB,CAesB;AAftB,GAAnB;AAiBA,MAAIC,OAAO,GAAG,CAAC,CAAC,IAAIJ,IAAJ,EAAD,GAAcF,IAAf,IAAuB,IAArC;AAAA,MACEO,KAAK,GAAG,KADV;AAAA,MAEEC,WAAW,GAAG,CAFhB;;AAIA,MAAIF,OAAO,IAAI,CAAf,EAAkB;AAChB,WAAO,UAAP;AACD;;AACD,MAAIA,OAAO,GAAG,CAAd,EAAiB;AACfA,IAAAA,OAAO,GAAGG,IAAI,CAACC,GAAL,CAASJ,OAAT,CAAV;AACAC,IAAAA,KAAK,GAAG,UAAR;AACAC,IAAAA,WAAW,GAAG,CAAd;AACD;;AACD,MAAIG,CAAC,GAAG,CAAR;AAAA,MACEC,MADF;;AAEA,SAAOA,MAAM,GAAGP,YAAY,CAACM,CAAC,EAAF,CAA5B,EAAmC;AACjC,QAAIL,OAAO,GAAGM,MAAM,CAAC,CAAD,CAApB,EAAyB;AACvB,UAAI,OAAOA,MAAM,CAAC,CAAD,CAAb,IAAoB,QAAxB,EACE,OAAOA,MAAM,CAACJ,WAAD,CAAb,CADF,KAGE,OAAOC,IAAI,CAACI,KAAL,CAAWP,OAAO,GAAGM,MAAM,CAAC,CAAD,CAA3B,IAAkC,GAAlC,GAAwCA,MAAM,CAAC,CAAD,CAA9C,GAAoD,GAApD,GAA0DL,KAAjE;AACH;AACF;;AACD,SAAOP,IAAP;AACD;;AAGD,eAAeD,aAAf","sourcesContent":["function datetimeSince(time) {\r\n\r\n  let since = new Date(time)\r\n\r\n  switch (typeof time) {\r\n    case 'number':\r\n      break;\r\n    case 'string':\r\n      time = +new Date(time);\r\n      break;\r\n    case 'object':\r\n      if (time.constructor === Date) time = time.getTime();\r\n      break;\r\n    default:\r\n      time = +new Date();\r\n  }\r\n  var time_formats = [\r\n    [60, 'seconds', 1], // 60\r\n    [120, '1 minute ago', '1 minute from now'], // 60*2\r\n    [3600, 'minutes', 60], // 60*60, 60\r\n    [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n    [86400, 'hours', 3600], // 60*60*24, 60*60\r\n    [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n    [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n    [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n    [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n    [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n    [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n    [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n    [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n    [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n    [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n  ];\r\n  var seconds = (+new Date() - time) / 1000,\r\n    token = 'ago',\r\n    list_choice = 1;\r\n\r\n  if (seconds == 0) {\r\n    return 'Just now'\r\n  }\r\n  if (seconds < 0) {\r\n    seconds = Math.abs(seconds);\r\n    token = 'from now';\r\n    list_choice = 2;\r\n  }\r\n  var i = 0,\r\n    format;\r\n  while (format = time_formats[i++]) {\r\n    if (seconds < format[0]) {\r\n      if (typeof format[2] == 'string')\r\n        return format[list_choice];\r\n      else\r\n        return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n    }\r\n  }\r\n  return time;\r\n}\r\n\r\n\r\nexport default datetimeSince"]},"metadata":{},"sourceType":"module"}