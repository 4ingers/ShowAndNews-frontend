{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\pages\\\\TagLayout\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport classnames from 'classnames';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module.scss'; // import PostsMasonry from '@/components/feed/PostsMasonry'\n\nconst GET_POSTS = gql`\n  query getPostsByTag($tagSlug: String, $offset: Int, $quantity: Int) {\n    getPostsByTag(tagSlug: $tagSlug, offset: $offset, quantity: $quantity) {\n      id\n      image\n      title\n      content\n      created_at\n      category\n      description\n      author\n      tags\n      slug\n    }\n  }\n`;\n\nconst TagLayout = ({\n  slug,\n  offset,\n  quantity\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POSTS, {\n    variables: {\n      tagSlug: slug,\n      offset,\n      quantity\n    }\n  });\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByTag.map(post => ({\n    id: post.id,\n    title: post.title,\n    description: post.description,\n    content: post.content,\n    datetime: post.created_at,\n    category: post.category,\n    tags: post.tags,\n    image: post.image,\n    slug: post.slug\n  }));\n  return __jsx(\"pre\", {\n    className: classnames(styles.content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, JSON.stringify(fetchedPosts, null, 2));\n};\n\nexport default TagLayout;","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/pages/TagLayout/index.js"],"names":["classnames","gql","useQuery","styles","GET_POSTS","TagLayout","slug","offset","quantity","loading","error","data","variables","tagSlug","fetchedPosts","getPostsByTag","map","post","id","title","description","content","datetime","created_at","category","tags","image","JSON","stringify"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;;AAGA,MAAMC,SAAS,GAAGH,GAAI;;;;;;;;;;;;;;;CAAtB;;AAkBA,MAAMI,SAAS,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAAgC;AAEhD,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACE,SAAD,EAAY;AACnDQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAEP,IADA;AAETC,MAAAA,MAFS;AAGTC,MAAAA;AAHS;AADwC,GAAZ,CAAzC;AAOA,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMK,YAAY,GAAGH,IAAI,CAACI,aAAL,CAAmBC,GAAnB,CAAuBC,IAAI,KAAK;AACnDC,IAAAA,EAAE,EAAED,IAAI,CAACC,EAD0C;AAEnDC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFuC;AAGnDC,IAAAA,WAAW,EAAEH,IAAI,CAACG,WAHiC;AAInDC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJqC;AAKnDC,IAAAA,QAAQ,EAAEL,IAAI,CAACM,UALoC;AAMnDC,IAAAA,QAAQ,EAAEP,IAAI,CAACO,QANoC;AAOnDC,IAAAA,IAAI,EAAER,IAAI,CAACQ,IAPwC;AAQnDC,IAAAA,KAAK,EAAET,IAAI,CAACS,KARuC;AASnDpB,IAAAA,IAAI,EAAEW,IAAI,CAACX;AATwC,GAAL,CAA3B,CAArB;AAYA,SACE;AAAK,IAAA,SAAS,EAAEN,UAAU,CAACG,MAAM,CAACkB,OAAR,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,IAAI,CAACC,SAAL,CAAed,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CADH,CADF;AAKD,CA7BD;;AA+BA,eAAeT,SAAf","sourcesContent":["import classnames from 'classnames'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module.scss'\r\n// import PostsMasonry from '@/components/feed/PostsMasonry'\r\n\r\n\r\nconst GET_POSTS = gql`\r\n  query getPostsByTag($tagSlug: String, $offset: Int, $quantity: Int) {\r\n    getPostsByTag(tagSlug: $tagSlug, offset: $offset, quantity: $quantity) {\r\n      id\r\n      image\r\n      title\r\n      content\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst TagLayout = ({ slug, offset, quantity }) => {\r\n\r\n  const { loading, error, data } = useQuery(GET_POSTS, {\r\n    variables: {\r\n      tagSlug: slug,\r\n      offset, \r\n      quantity\r\n    }\r\n  });\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  const fetchedPosts = data.getPostsByTag.map(post => ({\r\n    id: post.id,\r\n    title: post.title,\r\n    description: post.description,\r\n    content: post.content,\r\n    datetime: post.created_at,\r\n    category: post.category,\r\n    tags: post.tags,\r\n    image: post.image,\r\n    slug: post.slug\r\n  }))\r\n\r\n  return (\r\n    <pre className={classnames(styles.content)}>\r\n      {JSON.stringify(fetchedPosts, null, 2)}\r\n    </pre>\r\n  )\r\n}\r\n\r\nexport default TagLayout"]},"metadata":{},"sourceType":"module"}