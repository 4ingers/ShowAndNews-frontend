{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\body\\\\feed\\\\PostGrid.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useMemo } from 'react';\nimport { Link } from 'next/link'; // Get rid of it\n\nimport { Pagination } from 'antd';\nimport { TagRow } from '@/components/body/post';\nexport default function PostGrid(_ref) {\n  _s();\n\n  var _this = this;\n\n  var posts = _ref.posts;\n\n  var _useState = useState(9),\n      pageSize = _useState[0],\n      setPageSize = _useState[1];\n\n  var _useState2 = useState(1),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var paginatedPosts = useMemo(function () {\n    var lastIndex = current * pageSize;\n    var firstIndex = lastIndex - pageSize;\n    return posts.slice(firstIndex, lastIndex);\n  }, [current, pageSize, posts]); // useEffect(() => {\n  //   window.scroll({\n  //     top: 500,\n  //     left: 0,\n  //     behavior: 'smooth'\n  //   })\n  // }, [current, pageSize]);\n\n  return __jsx(\"section\", {\n    className: \"grid-pagination-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"post-grid container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, paginatedPosts.map(function (post, index) {\n    return __jsx(\"div\", {\n      className: \"post-container\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, __jsx(\"figure\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: post.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: url(\"/images/\".concat(post.image)),\n      alt: post.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })))), __jsx(TagRow, {\n      tags: post.categories,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, post.title), __jsx(\"p\", {\n      className: \"author-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, post.date)), __jsx(\"p\", {\n      className: \"description-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, post.description), __jsx(Link, {\n      href: post.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"Read more...\")));\n  })), __jsx(Pagination, {\n    simple: true,\n    showSizeChanger: true,\n    onShowSizeChange: setPageSize,\n    pageSize: pageSize,\n    total: posts.length,\n    defaultCurrent: current,\n    onChange: setCurrent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(PostGrid, \"8iEqMpaIiuPDMhvNxJdTE6BT/Sk=\");\n\n_c = PostGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"sources":["D:/Site/showandnews/components/body/feed/PostGrid.js"],"names":["useState","useMemo","Link","Pagination","TagRow","PostGrid","posts","pageSize","setPageSize","current","setCurrent","paginatedPosts","lastIndex","firstIndex","slice","map","post","index","link","url","image","categories","title","date","description","length"],"mappings":"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","sourcesContent":["import {useState, useMemo} from 'react'\r\nimport {Link} from 'next/link'\r\n\r\n// Get rid of it\r\nimport {Pagination} from 'antd'\r\nimport {TagRow} from '@/components/body/post'\r\n\r\nexport default function PostGrid({posts}) {\r\n  const [pageSize, setPageSize] = useState(9)\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const paginatedPosts = useMemo(() => {\r\n    const lastIndex = current * pageSize\r\n    const firstIndex = lastIndex - pageSize\r\n\r\n    return posts.slice(firstIndex, lastIndex)\r\n  }, [current, pageSize, posts])\r\n\r\n  // useEffect(() => {\r\n  //   window.scroll({\r\n  //     top: 500,\r\n  //     left: 0,\r\n  //     behavior: 'smooth'\r\n  //   })\r\n  // }, [current, pageSize]);\r\n   \r\n  return (\r\n    <section className=\"grid-pagination-container\">\r\n      <section className=\"post-grid container\">\r\n      {paginatedPosts.map((post, index) => (\r\n        <div className=\"post-container\" key={index}>\r\n          <figure>\r\n            <Link href={post.link}>\r\n              <a>\r\n                <img src={url(`/images/${post.image}`)} alt={post.image} />\r\n              </a>\r\n            </Link>\r\n          </figure>\r\n          <TagRow tags={post.categories} />\r\n          <h2>{post.title}</h2>\r\n          <p className=\"author-text\">\r\n            <span>\r\n              {post.date}\r\n            </span>\r\n          </p>\r\n          <p className=\"description-text\">\r\n            {post.description}\r\n          </p>\r\n          <Link href={post.link}>\r\n            <a>\r\n              Read more...\r\n            </a>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n      </section>\r\n      <Pagination \r\n        simple\r\n        showSizeChanger \r\n        onShowSizeChange={setPageSize} \r\n        pageSize={pageSize} \r\n        total={posts.length}\r\n        defaultCurrent={current}\r\n        onChange={setCurrent}\r\n      />\r\n    </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}