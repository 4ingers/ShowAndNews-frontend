{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\body\\\\CategoryBody.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport { PostsMasonry } from './feed/PostsMasonry';\nconst QUERY = gql`\n  query postsByCategory($category_id: Int){\n    getPostsByCategory(category_id: $category_id) {\n      id\n      image\n      title\n      created_at\n      category\n      description\n      author\n      tags\n      path\n    }\n  }\n`;\n\nfunction CategoryBody(props) {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY, {\n    variables: {\n      category_id: props.category_id\n    }\n  });\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByCategory.map(post => ({\n    title: post.title,\n    datetime: post.created_at,\n    category: post.category,\n    tags: post.tags,\n    image: post.image,\n    path: post.path\n  }));\n  return __jsx(\"main\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(\"section\", {\n    className: \"featured-posts-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, __jsx(PostsMasonry, {\n    posts: fetchedPosts,\n    columns: 2,\n    tagsOnTop: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default CategoryBody;","map":{"version":3,"sources":["D:/Site/showandnews/components/body/CategoryBody.js"],"names":["React","gql","useQuery","PostsMasonry","QUERY","CategoryBody","props","loading","error","data","variables","category_id","fetchedPosts","getPostsByCategory","map","post","title","datetime","created_at","category","tags","image","path"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,SAAQC,YAAR,QAA2B,qBAA3B;AAGA,MAAMC,KAAK,GAAGH,GAAI;;;;;;;;;;;;;;CAAlB;;AAiBA,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACE,KAAD,EAAQ;AAC/CM,IAAAA,SAAS,EAAE;AACTC,MAAAA,WAAW,EAAEL,KAAK,CAACK;AADV;AADoC,GAAR,CAAzC;AAKA,MAAIH,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMK,YAAY,GAAGH,IAAI,CAACI,kBAAL,CAAwBC,GAAxB,CAA4BC,IAAI,KACnD;AACEC,IAAAA,KAAK,EAAED,IAAI,CAACC,KADd;AAEEC,IAAAA,QAAQ,EAAEF,IAAI,CAACG,UAFjB;AAGEC,IAAAA,QAAQ,EAAEJ,IAAI,CAACI,QAHjB;AAIEC,IAAAA,IAAI,EAAEL,IAAI,CAACK,IAJb;AAKEC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KALd;AAMEC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AANb,GADmD,CAAhC,CAArB;AAWA,SACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEV,YAArB;AAAmC,IAAA,OAAO,EAAE,CAA5C;AAA+C,IAAA,SAAS,EAAE,IAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF;AAWD;;AAED,eAAeP,YAAf","sourcesContent":["import React from 'react'\r\nimport { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport {PostsMasonry} from './feed/PostsMasonry'\r\n\r\n\r\nconst QUERY = gql`\r\n  query postsByCategory($category_id: Int){\r\n    getPostsByCategory(category_id: $category_id) {\r\n      id\r\n      image\r\n      title\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      path\r\n    }\r\n  }\r\n`\r\n\r\n\r\nfunction CategoryBody(props) {\r\n  const { loading, error, data } = useQuery(QUERY, {\r\n    variables: {\r\n      category_id: props.category_id\r\n    }\r\n  });\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>;\r\n\r\n  const fetchedPosts = data.getPostsByCategory.map(post => (\r\n    {\r\n      title: post.title,\r\n      datetime: post.created_at,\r\n      category: post.category,\r\n      tags: post.tags,\r\n      image: post.image,\r\n      path: post.path\r\n    }\r\n  ))\r\n\r\n  return (\r\n    <main className=\"home\">\r\n      <section className=\"container\">\r\n        <div className=\"row\">\r\n          <section className=\"featured-posts-container\">\r\n            <PostsMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} />\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default CategoryBody"]},"metadata":{},"sourceType":"module"}