{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\layouts\\\\pages\\\\CategoryLayout\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styles from './styles.module.scss';\nimport PostsMasonry from '@/components/feed/PostsMasonry';\nimport PostsGrid from '@/components/feed/PostsGrid';\nconst GET_POSTS = gql`\n  query getPostsByCategory($catSlug: String) {\n    getPostsByCategory(catSlug: $catSlug) {\n      id\n      image\n      title\n      content\n      created_at\n      category\n      description\n      author\n      tags\n      slug\n    }\n  }\n`;\n\nconst CategoryLayout = ({\n  slug: catSlug\n}) => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POSTS, {\n    variables: {\n      // catSlug: catSlug\n      catSlug\n    }\n  });\n  if (error) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Error\");\n  if (loading) return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  const fetchedPosts = data.getPostsByCategory.map(post => ({\n    title: post.title,\n    description: post.description,\n    content: post.content,\n    datetime: post.created_at,\n    category: post.category,\n    tags: post.tags,\n    image: post.image,\n    slug: post.slug\n  }));\n  return __jsx(\"section\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"section\", {\n    className: styles.featuredPostsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default CategoryLayout;","map":{"version":3,"sources":["D:/Site/showandnews/components/layouts/pages/CategoryLayout/index.js"],"names":["gql","useQuery","styles","PostsMasonry","PostsGrid","GET_POSTS","CategoryLayout","slug","catSlug","loading","error","data","variables","fetchedPosts","getPostsByCategory","map","post","title","description","content","datetime","created_at","category","tags","image","container","row","featuredPostsContainer"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,cAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAGA,MAAMC,SAAS,GAAGL,GAAI;;;;;;;;;;;;;;;CAAtB;;AAkBA,MAAMM,cAAc,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAEC;AAAR,CAAD,KAAuB;AAE5C,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACI,SAAD,EAAY;AACnDO,IAAAA,SAAS,EAAE;AACT;AACAJ,MAAAA;AAFS;AADwC,GAAZ,CAAzC;AAMA,MAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMI,YAAY,GAAGF,IAAI,CAACG,kBAAL,CAAwBC,GAAxB,CAA4BC,IAAI,KAAK;AACxDC,IAAAA,KAAK,EAAED,IAAI,CAACC,KAD4C;AAExDC,IAAAA,WAAW,EAAEF,IAAI,CAACE,WAFsC;AAGxDC,IAAAA,OAAO,EAAEH,IAAI,CAACG,OAH0C;AAIxDC,IAAAA,QAAQ,EAAEJ,IAAI,CAACK,UAJyC;AAKxDC,IAAAA,QAAQ,EAAEN,IAAI,CAACM,QALyC;AAMxDC,IAAAA,IAAI,EAAEP,IAAI,CAACO,IAN6C;AAOxDC,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAP4C;AAQxDjB,IAAAA,IAAI,EAAES,IAAI,CAACT;AAR6C,GAAL,CAAhC,CAArB;AAYA,SACE;AAAS,IAAA,SAAS,EAAEL,MAAM,CAACuB,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAACwB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAExB,MAAM,CAACyB,sBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAUD,CAjCD;;AAmCA,eAAerB,cAAf","sourcesContent":["import { gql } from 'apollo-boost'\r\nimport { useQuery } from '@apollo/react-hooks'\r\n\r\nimport styles from './styles.module.scss'\r\nimport PostsMasonry from '@/components/feed/PostsMasonry'\r\nimport PostsGrid from '@/components/feed/PostsGrid'\r\n\r\n\r\nconst GET_POSTS = gql`\r\n  query getPostsByCategory($catSlug: String) {\r\n    getPostsByCategory(catSlug: $catSlug) {\r\n      id\r\n      image\r\n      title\r\n      content\r\n      created_at\r\n      category\r\n      description\r\n      author\r\n      tags\r\n      slug\r\n    }\r\n  }\r\n`\r\n\r\n\r\nconst CategoryLayout = ({ slug: catSlug }) => {\r\n\r\n  const { loading, error, data } = useQuery(GET_POSTS, {\r\n    variables: {\r\n      // catSlug: catSlug\r\n      catSlug\r\n    }\r\n  });\r\n  if (error) return <h1>Error</h1>\r\n  if (loading) return <h1>Loading...</h1>\r\n\r\n  const fetchedPosts = data.getPostsByCategory.map(post => ({\r\n    title: post.title,\r\n    description: post.description,\r\n    content: post.content,\r\n    datetime: post.created_at,\r\n    category: post.category,\r\n    tags: post.tags,\r\n    image: post.image,\r\n    slug: post.slug\r\n  }\r\n  ))\r\n\r\n  return (\r\n    <section className={styles.container}>\r\n      <div className={styles.row}>\r\n        <section className={styles.featuredPostsContainer}>\r\n          {/* <PostsMasonry posts={fetchedPosts} columns={2} tagsOnTop={true} /> */}\r\n          {/* <PostsGrid posts={fetchedPosts} /> */}\r\n        </section>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CategoryLayout"]},"metadata":{},"sourceType":"module"}