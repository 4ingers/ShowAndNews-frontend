{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Site\\\\showandnews\\\\components\\\\feed\\\\PostsGrid\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useMemo } from 'react';\nimport { Link } from 'next/link';\nimport { Pagination } from 'antd';\nimport styles from './';\nimport useUpdateEffect from './hooks';\nimport TagRow from '@/components/feed/TagRow';\n\nvar PostGrid = function PostGrid(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n\n  var _useState = useState(9),\n      pageSize = _useState[0],\n      setPageSize = _useState[1];\n\n  var _useState2 = useState(1),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var paginatedPosts = useMemo(function () {\n    var lastIndex = current * pageSize;\n    var firstIndex = lastIndex - pageSize;\n    return posts.slice(firstIndex, lastIndex);\n  }, [current, pageSize, posts]);\n  useUpdateEffect(function () {\n    window.scroll({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [current, pageSize]);\n  return __jsx(\"section\", {\n    className: styles.gridPaginationContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: styles.gridContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, paginatedPosts.map(function (post, index) {\n    return __jsx(\"div\", {\n      className: styles.postContainer,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, __jsx(\"figure\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/post/\".concat(post.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: url(\"/images/\".concat(post.image)),\n      alt: post.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 19\n      }\n    })))), __jsx(TagRow, {\n      tags: post.tags,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }), __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, post.title), __jsx(\"p\", {\n      className: styles.authorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, post.created_at)), __jsx(\"p\", {\n      className: styles.descriptionText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, post.description), __jsx(Link, {\n      href: \"post/\".concat(post.slug),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, \"\\u041F\\u043E\\u0434\\u0440\\u043E\\u0431\\u043D\\u0435\\u0435\")));\n  })), __jsx(Pagination, {\n    showSizeChanger: true,\n    onShowSizeChange: setPageSize,\n    pageSize: pageSize,\n    total: posts.length,\n    defaultCurrent: current,\n    onChange: setCurrent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(PostGrid, \"Ie5XS4A97YeyQE5jPmP5B5PmCzM=\", false, function () {\n  return [useUpdateEffect];\n});\n\n_c = PostGrid;\nexport default PostGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"sources":["D:/Site/showandnews/components/feed/PostsGrid/index.js"],"names":["useState","useMemo","Link","Pagination","styles","useUpdateEffect","TagRow","PostGrid","posts","pageSize","setPageSize","current","setCurrent","paginatedPosts","lastIndex","firstIndex","slice","window","scroll","top","behavior","gridPaginationContainer","gridContainer","map","post","index","postContainer","slug","url","image","tags","title","authorText","created_at","descriptionText","description","length"],"mappings":"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","sourcesContent":["import { useState, useMemo } from 'react'\r\nimport { Link } from 'next/link'\r\nimport { Pagination } from 'antd'\r\n\r\nimport styles from './'\r\nimport useUpdateEffect from './hooks'\r\nimport TagRow from '@/components/feed/TagRow'\r\n\r\n\r\nconst PostGrid = ({ posts }) => {\r\n  const [pageSize, setPageSize] = useState(9)\r\n  const [current, setCurrent] = useState(1);\r\n\r\n  const paginatedPosts = useMemo(() => {\r\n    const lastIndex = current * pageSize\r\n    const firstIndex = lastIndex - pageSize\r\n\r\n    return posts.slice(firstIndex, lastIndex)\r\n  }, [current, pageSize, posts])\r\n\r\n  useUpdateEffect(() => {\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'smooth'\r\n    })\r\n  }, [current, pageSize])\r\n\r\n  return (\r\n    <section className={styles.gridPaginationContainer}>\r\n      <section className={styles.gridContainer}>\r\n        {paginatedPosts.map((post, index) => (\r\n          <div className={styles.postContainer} key={index}>\r\n            <figure>\r\n              <Link href={`/post/${post.slug}`}>\r\n                <a>\r\n                  <img src={url(`/images/${post.image}`)} alt={post.image} />\r\n                </a>\r\n              </Link>\r\n            </figure>\r\n\r\n            <TagRow tags={post.tags} />\r\n\r\n            <h2>\r\n              {post.title}\r\n            </h2>\r\n\r\n            <p className={styles.authorText}>\r\n              <span>\r\n                {post.created_at}\r\n              </span>\r\n            </p>\r\n\r\n            <p className={styles.descriptionText}>\r\n              {post.description}\r\n            </p>\r\n\r\n            <Link href={`post/${post.slug}`}>\r\n              <a>Подробнее</a>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </section>\r\n      <Pagination\r\n        showSizeChanger\r\n        onShowSizeChange={setPageSize}\r\n        pageSize={pageSize}\r\n        total={posts.length}\r\n        defaultCurrent={current}\r\n        onChange={setCurrent}\r\n      />\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default PostGrid"]},"metadata":{},"sourceType":"module"}